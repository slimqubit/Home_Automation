[
    {
        "id": "1a3fd140.a8709f",
        "type": "tab",
        "label": "System Performance",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bf6180f0.a77c6",
        "type": "tab",
        "label": "CHE - Central Heating System",
        "disabled": false,
        "info": ""
    },
    {
        "id": "71c264a01ef7273c",
        "type": "tab",
        "label": "PEH - Puffer Electrical Heater",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0beb465e28a680b4",
        "type": "tab",
        "label": "WBH - Hot Water Boiler Heating",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2897d003.78d0a",
        "type": "tab",
        "label": "Relays section",
        "disabled": false,
        "info": ""
    },
    {
        "id": "53727ccd522e1e45",
        "type": "tab",
        "label": "Power Monitror",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c6509c5fd3e268a",
        "type": "tab",
        "label": "Embed Grafana graphs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "21a9ed82f7161b37",
        "type": "tab",
        "label": "Disabled Flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7ee931b.b980fd",
        "type": "tab",
        "label": "Weather",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7346bde9601d82e2",
        "type": "tab",
        "label": "Misc",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "21187818.0fa5a8",
        "type": "subflow",
        "name": "Heating Settings",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 340,
                "y": 100,
                "wires": [
                    {
                        "id": "bea13c7f.aa637"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 100,
                "wires": [
                    {
                        "id": "bea13c7f.aa637",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6bf576b.0604988",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.2.25",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "78faab46.431af4",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Grafana Profyle",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#4B7930",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6db046",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#4b7930",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "17327430.7b0f6c",
        "type": "ui_group",
        "name": "Local Sensors",
        "tab": "4bb34f67.69a87",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e32ed8a.140104",
        "type": "ui_tab",
        "name": "RPi Devices",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "77ac1d04.0ca6e4",
        "type": "ui_group",
        "name": "Dev01 Performance",
        "tab": "5e32ed8a.140104",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1c9e32e2.fef1dd",
        "type": "ui_group",
        "name": "Dev02 Performance",
        "tab": "5e32ed8a.140104",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a8bf519.1f58ea",
        "type": "ui_group",
        "name": "Home Control",
        "tab": "743065cf.8b002c",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "743065cf.8b002c",
        "type": "ui_tab",
        "name": "_Temp",
        "icon": "home",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e5571c1e.f9dd8",
        "type": "sqlitedb",
        "db": "HomeControl.db",
        "mode": "RWC"
    },
    {
        "id": "373fa459.54e07c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "HomeControl",
        "name": "HomeControl",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "bbc3532f.41ca7",
        "type": "ui_group",
        "name": "Energy Data",
        "tab": "1ff97cd4.681d5b",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ff97cd4.681d5b",
        "type": "ui_tab",
        "name": "Energy Charts",
        "icon": "assessment",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a99b95ea1804fb1e",
        "type": "ui_spacer",
        "z": "bf6180f0.a77c6",
        "name": "spacer",
        "group": "77ac1d04.0ca6e4",
        "order": 5,
        "width": "1",
        "height": 1,
        "className": ""
    },
    {
        "id": "60674646187b0b95",
        "type": "ui_spacer",
        "z": "bf6180f0.a77c6",
        "name": "spacer",
        "group": "1c9e32e2.fef1dd",
        "order": 5,
        "width": 1,
        "height": 1,
        "className": ""
    },
    {
        "id": "4a3f1d17.42abc4",
        "type": "ui_group",
        "name": "Dev01 Storage Usage",
        "tab": "5e32ed8a.140104",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75cd3a25.41ce84",
        "type": "ui_tab",
        "name": "Environment",
        "icon": "view_week",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "be76d04b6829132b",
        "type": "ui_group",
        "name": "Încălzire electrică Puffer",
        "tab": "75cd3a25.41ce84",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ea2c93ef1c1d2c43",
        "type": "ui_group",
        "name": "Temperatura Puffer",
        "tab": "75cd3a25.41ce84",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "70fb931.dfc146c",
        "type": "ui_group",
        "name": "Weather",
        "tab": "75cd3a25.41ce84",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4bb34f67.69a87",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "fa-thermometer-half",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0a3e100712f77794",
        "type": "ui_group",
        "name": "Încălzire Centrală",
        "tab": "4ce27a69eecfcbf2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a8220c0c3ba2a1b4",
        "type": "ui_group",
        "name": "Încălzire Boiler apă caldă",
        "tab": "75cd3a25.41ce84",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7dd65d4e550bef05",
        "type": "ui_spacer",
        "z": "2897d003.78d0a",
        "name": "spacer",
        "group": "a8220c0c3ba2a1b4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7481df2b3b27f847",
        "type": "ui_group",
        "name": "Opţiuni Avansate / Altele",
        "tab": "75cd3a25.41ce84",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ce27a69eecfcbf2",
        "type": "ui_tab",
        "name": "Încălzire",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bea13c7f.aa637",
        "type": "function",
        "z": "21187818.0fa5a8",
        "name": "Set settings",
        "func": "var x = env.get(\"ecoL\"); \nvar y = env.get(\"ecoH\");\nvar z = env.get(\"defaultTemp\"); \n\nflow.set(\"$parent.ecoLOW\", x);    \nflow.set(\"$parent.ecoHIGH\", y);\nflow.set(\"$parent.defaultTemp\", z);\n\nmsg.payload = \"Your settings has been saved: ecoL: \"+x+ \", ecoH: \"+y+ \", default TempL \"+z;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "49356244.c5bb0c",
        "type": "Memory",
        "z": "1a3fd140.a8709f",
        "name": "",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "7aeec815.f6fd88"
            ]
        ]
    },
    {
        "id": "65407e62.70c78",
        "type": "cpu",
        "z": "1a3fd140.a8709f",
        "name": "",
        "x": 488,
        "y": 104,
        "wires": [
            [
                "15167873.b1ce68"
            ]
        ]
    },
    {
        "id": "15167873.b1ce68",
        "type": "ui_chart",
        "z": "1a3fd140.a8709f",
        "name": "",
        "group": "77ac1d04.0ca6e4",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Initializing ...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 739,
        "y": 131,
        "wires": [
            []
        ]
    },
    {
        "id": "7aeec815.f6fd88",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "Format Data",
        "func": "var m = msg.payload.memusage;\nmsg.payload = m;\nmsg.topic = 'mem';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 559.5,
        "y": 160,
        "wires": [
            [
                "15167873.b1ce68"
            ]
        ]
    },
    {
        "id": "ab9f7b89.245898",
        "type": "inject",
        "z": "1a3fd140.a8709f",
        "name": "10 sec tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 179,
        "y": 131,
        "wires": [
            [
                "65407e62.70c78",
                "49356244.c5bb0c"
            ]
        ]
    },
    {
        "id": "36770a91.e91846",
        "type": "wifiscan",
        "z": "1a3fd140.a8709f",
        "name": "",
        "x": 395,
        "y": 289,
        "wires": [
            [
                "46e13f32.ccbab"
            ]
        ]
    },
    {
        "id": "46e13f32.ccbab",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "Format Data",
        "func": "var obj = msg.payload;\nvar nlev = 0;\nvar slev = \"None\";\nvar ssid = \"Unknown\";\n\nif (obj.length > 0)\n{\n    ssid = obj[0].ssid;\n    nlev = obj[0].signal_level;\n    \n    if (nlev < -70) { slev = \"Weak\" } \n    else if (nlev < -60) { slev = \"Fair\" } \n    else if (nlev <= -50) { slev = \"Good\" } \n    else { slev = \"Excellent\" }\n}\n\nmsg.payload = slev;\nmsg.topic = ssid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 579,
        "y": 288,
        "wires": [
            [
                "634b1e28.56dc9"
            ]
        ]
    },
    {
        "id": "634b1e28.56dc9",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "77ac1d04.0ca6e4",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "WiFi Signal",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 763,
        "y": 288,
        "wires": []
    },
    {
        "id": "37e23825.5835b8",
        "type": "exec",
        "z": "1a3fd140.a8709f",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "GeT CPU Temp",
        "x": 389,
        "y": 231,
        "wires": [
            [
                "a02505e9.77ee58"
            ],
            [],
            []
        ]
    },
    {
        "id": "a02505e9.77ee58",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "Format Data",
        "func": "str = msg.payload;\nmsg.payload = str.substring(5,9) + \" °C\";\nmsg.topic = \"CPU Temperature\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 579,
        "y": 231,
        "wires": [
            [
                "2adc157b.0beada"
            ]
        ]
    },
    {
        "id": "2adc157b.0beada",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "77ac1d04.0ca6e4",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "CPU Temperature",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 779,
        "y": 231,
        "wires": []
    },
    {
        "id": "ee07c4ca.0f1a88",
        "type": "inject",
        "z": "1a3fd140.a8709f",
        "name": "2 hours tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 179,
        "y": 251,
        "wires": [
            [
                "36770a91.e91846",
                "37e23825.5835b8"
            ]
        ]
    },
    {
        "id": "e0900048.b6d75",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "RPi Performance",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "e65b9dd1.b260a",
        "type": "ui_chart",
        "z": "1a3fd140.a8709f",
        "name": "",
        "group": "1c9e32e2.fef1dd",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "Initializing ...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 730,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d4ab31a4.ecb39",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "1c9e32e2.fef1dd",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "WiFi Signal",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 460,
        "wires": []
    },
    {
        "id": "10ce2c45.6c64c4",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "1c9e32e2.fef1dd",
        "order": 3,
        "width": "6",
        "height": "1",
        "name": "CPU Temperature",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "23daf9d0.5b3136",
        "type": "mqtt in",
        "z": "1a3fd140.a8709f",
        "name": "PiZeroW1/Status",
        "topic": "PiZeroW1/Status",
        "qos": "2",
        "datatype": "auto",
        "broker": "6bf576b.0604988",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "5d75aeab.5344e"
            ]
        ]
    },
    {
        "id": "2bf70e32.9b8d62",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "Format Status",
        "func": "var stat = msg.payload;\n\nmsg1 = {};\nmsg1.topic = 'core_1';\nmsg1.payload = stat.pzw1Cpu;\nnode.send([msg1, null, null]);\n\nmsg1.topic = 'mem';\nmsg1.payload = stat.pzw1Mem;\nnode.send([msg1, null, null]);\n\nmsg2 = {};\nmsg2.topic= stat.pzw1WFiSsid;\nmsg2.payload= stat.pzw1WFiLevel;\n\nmsg3 = {};\nmsg3.topic= 'CPU Temperature';\nmsg3.payload= stat.pzw1CpuTemp;\n\nreturn [null, msg2, msg3];\n\n",
        "outputs": "3",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            [
                "e65b9dd1.b260a"
            ],
            [
                "d4ab31a4.ecb39"
            ],
            [
                "10ce2c45.6c64c4"
            ]
        ]
    },
    {
        "id": "5d75aeab.5344e",
        "type": "json",
        "z": "1a3fd140.a8709f",
        "name": "",
        "pretty": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "2bf70e32.9b8d62"
            ]
        ]
    },
    {
        "id": "6e408232.15f36c",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "PiZeroW1 Performance",
        "info": "",
        "x": 180,
        "y": 400,
        "wires": []
    },
    {
        "id": "35955cee670010bb",
        "type": "inject",
        "z": "1a3fd140.a8709f",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "920d6fcd031c2eb8",
                "b4966e38adf7e454"
            ]
        ]
    },
    {
        "id": "1fc7e6caf51c122c",
        "type": "ui_gauge",
        "z": "1a3fd140.a8709f",
        "name": "",
        "group": "4a3f1d17.42abc4",
        "order": 2,
        "width": "6",
        "height": "4",
        "gtype": "wave",
        "title": "Used",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "className": "",
        "x": 770,
        "y": 660,
        "wires": []
    },
    {
        "id": "0e1ebcb5a3f9ce8f",
        "type": "ui_chart",
        "z": "1a3fd140.a8709f",
        "name": "",
        "group": "4a3f1d17.42abc4",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "Storage",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ef1306c8c9312090",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "convert_uptime",
        "func": "function format(uptime){\n  function pad(s){\n    return (s < 10 ? '0' : '') + s;\n  }\n  var hours = Math.floor(uptime / (60*60));\n  var minutes = Math.floor(uptime % (60*60) / 60);\n  var seconds = Math.floor(uptime % 60);\n\n  return pad(hours) + ':' + pad(minutes) + ':' + pad(seconds);\n}\n\nvar uptime = msg.payload.uptime;\nmsg.payload = format(uptime);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 700,
        "wires": [
            [
                "26fec6faab3332fd"
            ]
        ]
    },
    {
        "id": "920d6fcd031c2eb8",
        "type": "Uptime",
        "z": "1a3fd140.a8709f",
        "name": "Uptime",
        "x": 380,
        "y": 700,
        "wires": [
            [
                "ef1306c8c9312090"
            ]
        ]
    },
    {
        "id": "b4966e38adf7e454",
        "type": "exec",
        "z": "1a3fd140.a8709f",
        "command": "df -m | grep root",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "read_sd_usage",
        "x": 400,
        "y": 640,
        "wires": [
            [
                "1dec24738e798ba1"
            ],
            [],
            []
        ]
    },
    {
        "id": "1dec24738e798ba1",
        "type": "function",
        "z": "1a3fd140.a8709f",
        "name": "convert",
        "func": "var msg1,msg2,msg3;\n\nl = msg.payload.split(/(\\s+)/).filter( function(e) { return e.trim().length > 0; } );\nmsg1 = {topic: 'Total', payload: Math.round(l[1] / 1000)};\nmsg2 = {topic: 'Free', payload: Math.round(l[3] / 1000)};\nmsg3 = {topic: 'Used%', payload: l[4].slice(0, -1)};\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 640,
        "wires": [
            [
                "0e1ebcb5a3f9ce8f"
            ],
            [
                "0e1ebcb5a3f9ce8f"
            ],
            [
                "0e1ebcb5a3f9ce8f",
                "1fc7e6caf51c122c"
            ]
        ]
    },
    {
        "id": "26fec6faab3332fd",
        "type": "debug",
        "z": "1a3fd140.a8709f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 700,
        "wires": []
    },
    {
        "id": "43d5d9bb3fc57b70",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "RPi Performance",
        "info": "",
        "x": 160,
        "y": 620,
        "wires": []
    },
    {
        "id": "8716ebabb8e085ef",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "1c9e32e2.fef1dd",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "Hostname",
        "label": "Hostname",
        "format": "rpi-dev-02   -   192.168.2.26",
        "layout": "row-spread",
        "className": "",
        "x": 530,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8104753bef424136",
        "type": "ui_button",
        "z": "1a3fd140.a8709f",
        "name": "Reboot Pi",
        "group": "1c9e32e2.fef1dd",
        "order": 6,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "System Restart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "PiZeroW1/Reboot",
        "topicType": "str",
        "x": 136,
        "y": 1022,
        "wires": [
            [
                "617982847b5db3fd"
            ]
        ]
    },
    {
        "id": "617982847b5db3fd",
        "type": "mqtt out",
        "z": "1a3fd140.a8709f",
        "name": "PiZeroW1/Reboot",
        "topic": "PiZeroW1/Reboot",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6bf576b.0604988",
        "x": 344,
        "y": 1022,
        "wires": []
    },
    {
        "id": "d1eeea8dd2d67d1d",
        "type": "ui_text",
        "z": "1a3fd140.a8709f",
        "group": "77ac1d04.0ca6e4",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "Hostname",
        "label": "Hostname",
        "format": "rpi-dev-01   -   192.168.2.25",
        "layout": "row-spread",
        "className": "",
        "x": 536,
        "y": 881,
        "wires": []
    },
    {
        "id": "f35d54ef684ba195",
        "type": "exec",
        "z": "1a3fd140.a8709f",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Exec Reboot",
        "x": 331,
        "y": 887,
        "wires": [
            [
                "b3fee481ba018377"
            ],
            [
                "b3fee481ba018377"
            ],
            [
                "b3fee481ba018377"
            ]
        ]
    },
    {
        "id": "53b28f404e9f9668",
        "type": "ui_button",
        "z": "1a3fd140.a8709f",
        "name": "Reboot Pi",
        "group": "77ac1d04.0ca6e4",
        "order": 6,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "System Restart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 134.5,
        "y": 886.5,
        "wires": [
            [
                "f35d54ef684ba195"
            ]
        ]
    },
    {
        "id": "913feb8e664839b8",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "RPi Control",
        "info": "",
        "x": 146,
        "y": 835,
        "wires": []
    },
    {
        "id": "7eb5ba41f27947b0",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "PiZeroW1 Control",
        "info": "",
        "x": 165,
        "y": 980,
        "wires": []
    },
    {
        "id": "7048a04472eedbbb",
        "type": "timeout",
        "z": "1a3fd140.a8709f",
        "name": "Connection timeout",
        "outtopic": "",
        "outsafe": "Is Online",
        "outwarning": "Internet connection Warning ",
        "outunsafe": "Internet connection Down",
        "warning": "120",
        "timer": "300",
        "repeat": false,
        "again": false,
        "x": 522,
        "y": 1166,
        "wires": [
            [
                "979ef089ab80b7c2",
                "226d636ea0e56773"
            ]
        ]
    },
    {
        "id": "40ef3d43aaa96065",
        "type": "is online",
        "z": "1a3fd140.a8709f",
        "name": "Is Online",
        "url": "www.google.com",
        "action": "1",
        "x": 332,
        "y": 1166,
        "wires": [
            [
                "7048a04472eedbbb"
            ]
        ]
    },
    {
        "id": "40b5ec3f620c7574",
        "type": "inject",
        "z": "1a3fd140.a8709f",
        "name": "1 min tick",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 162,
        "y": 1166,
        "wires": [
            [
                "40ef3d43aaa96065"
            ]
        ]
    },
    {
        "id": "681722733eac2f20",
        "type": "comment",
        "z": "1a3fd140.a8709f",
        "name": "Internet connection Health",
        "info": "",
        "x": 182,
        "y": 1126,
        "wires": []
    },
    {
        "id": "979ef089ab80b7c2",
        "type": "switch",
        "z": "1a3fd140.a8709f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Internet connection Down",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 702,
        "y": 1246,
        "wires": [
            [
                "19f0c8113e0d8780"
            ]
        ]
    },
    {
        "id": "226d636ea0e56773",
        "type": "debug",
        "z": "1a3fd140.a8709f",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 762,
        "y": 1166,
        "wires": []
    },
    {
        "id": "19f0c8113e0d8780",
        "type": "debug",
        "z": "1a3fd140.a8709f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 862,
        "y": 1246,
        "wires": []
    },
    {
        "id": "b3fee481ba018377",
        "type": "debug",
        "z": "1a3fd140.a8709f",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 920,
        "wires": []
    },
    {
        "id": "b7c4f94f.213918",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "T.Centrala",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "694cfc9e.3be7c4",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "T.Puffer.Max",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "4255c6d9.2766d8",
        "type": "inject",
        "z": "bf6180f0.a77c6",
        "name": "30 sec tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "9167e18e.83f8",
                "dd7b5aeec5319c88"
            ]
        ]
    },
    {
        "id": "ca6b199e.5bf298",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "Format Data",
        "func": "if (msg.payload.hasOwnProperty(\"tBoiler\"))\n{\n    node.send([{tag:\"Temp Subsol\", payload:msg.payload.tSubsol}]);\n    node.send([null, {tag:\"Temp Boiler\", payload:msg.payload.tBoiler}]);\n}\n\nif (msg.payload.hasOwnProperty(\"tCentrala\"))\n{\n    node.send([{tag:\"Temperatură Centrală\", payload:msg.payload.tCentrala}]);\n    node.send([null, {tag:\"Temperatură Puffer (sus)\", payload:msg.payload.tPuff4}]);\n    node.send([null, null, {tag:\"Temperatură Puffer (Jos)\", payload:msg.payload.tPuff1}]);\n    node.send([null, null, null, {tag:\"Temperatură  radiatoare Tur\", payload:msg.payload.tRCTur}]);\n    node.send([null, null, null, null, {tag:\"Temperatură  radiatoare Retur\", payload:msg.payload.tRCRetur}]);\n}\n\nreturn;\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "b7c4f94f.213918"
            ],
            [
                "694cfc9e.3be7c4"
            ],
            [
                "170743cda27298c9"
            ],
            [
                "3d453e23c7b63e30"
            ],
            [
                "a3c81573605a67c9"
            ]
        ],
        "outputLabels": [
            "Temp1",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "90279230.a1eb2",
        "type": "mqtt in",
        "z": "bf6180f0.a77c6",
        "name": "PiZeroW1/TempSensors",
        "topic": "PiZeroW1/TempSensors",
        "qos": "2",
        "datatype": "auto",
        "broker": "6bf576b.0604988",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "67a7187c.6fd688"
            ]
        ]
    },
    {
        "id": "67a7187c.6fd688",
        "type": "json",
        "z": "bf6180f0.a77c6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "0d1c9819e37ae381",
                "5576c3bcfce6f4eb"
            ]
        ]
    },
    {
        "id": "635a96dc.4e8c98",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "Read Temperature Sensors from main board",
        "info": "All 1 Wire temperature sensors are aggregated here",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "9167e18e.83f8",
        "type": "owfs",
        "z": "bf6180f0.a77c6",
        "name": "",
        "uncached": true,
        "mode": "read",
        "host": "localhost",
        "port": 4304,
        "paths": [
            "28.FF44AB231703/temperature"
        ],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "d18a0817bd119966"
            ]
        ]
    },
    {
        "id": "3fb6bccee518bedf",
        "type": "join-wait",
        "z": "bf6180f0.a77c6",
        "name": "",
        "paths": "[\"tempSubsol\", \"tempBoiler\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": true,
        "pathTopic": "tag",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": 15000,
        "timeoutUnits": 1,
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 740,
        "y": 120,
        "wires": [
            [
                "28c7d0eae989ea6d"
            ],
            []
        ]
    },
    {
        "id": "28c7d0eae989ea6d",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "Normalize Result",
        "func": "function EnsureGlobalVar(name, value) {\n    if (typeof (value === 'number') && !isNaN(value))\n        global.set(name, value);\n    return;\n}\n\nvar iMsg =\n    {\"payload\":{\n        \"tSubsol\":0, \"tBoiler\":0, \"tProba\":0\n    }}\n\niMsg.payload.tSubsol = msg.tag.tempSubsol;\niMsg.payload.tBoiler = msg.tag.tempBoiler;\n\nEnsureGlobalVar(\"tSens_Boiler\", iMsg.payload.tBoiler);\n\nreturn iMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 120,
        "wires": [
            [
                "88ab38b868fabaa5",
                "787762411546ee15"
            ]
        ]
    },
    {
        "id": "787762411546ee15",
        "type": "influxdb out",
        "z": "bf6180f0.a77c6",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1230,
        "y": 120,
        "wires": []
    },
    {
        "id": "170743cda27298c9",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "T.Puffer.Min",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 500,
        "wires": []
    },
    {
        "id": "3d453e23c7b63e30",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "TurRad",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 460,
        "wires": []
    },
    {
        "id": "0d1c9819e37ae381",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "Normalize Result",
        "func": "function EnsureGlobalVar(name, value) {\n    if (typeof (value === 'number') && !isNaN(value))\n        global.set(name, value);\n    return;\n}\n\nvar iMsg =\n    {\"payload\":{\n        \"tPuff1\":0, \"tPuff2\":0, \"tPuff3\":0, \"tPuff4\":0, \"tCentrala\":0, \"tCTTur\":0, \"tCTRetur\":0, \"tRCTur\":0, \"tRCRetur\":0, \"tBoilerRoom\":0\n    }}\n\niMsg.payload.tPuff1 = msg.payload.tPuff1;\niMsg.payload.tPuff2 = msg.payload.tPuff2;\niMsg.payload.tPuff3 = msg.payload.tPuff3;\niMsg.payload.tPuff4 = msg.payload.tPuff4;\niMsg.payload.tCTTur = msg.payload.tCTTur;\n\niMsg.payload.tCentrala   = msg.payload.tCentrala;\niMsg.payload.tRCTur      = msg.payload.tRCTur;\niMsg.payload.tRCRetur    = msg.payload.tRCRetur;\niMsg.payload.tBoilerRoom = msg.payload.tBoilerRoom;\niMsg.payload.tHorn       = msg.payload.tHorn;\n\nEnsureGlobalVar(\"tSens_Puff1\", msg.payload.tPuff1);\nEnsureGlobalVar(\"tSens_Puff2\", msg.payload.tPuff2);\nEnsureGlobalVar(\"tSens_Puff3\", msg.payload.tPuff3);\nEnsureGlobalVar(\"tSens_Puff4\", msg.payload.tPuff4);\n\nEnsureGlobalVar(\"tSens_Centrala\", msg.payload.tCentrala);\n\nreturn iMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 280,
        "wires": [
            [
                "ced754421b5736d1",
                "c464b3387290f542",
                "381ab05bd5d981c2"
            ]
        ]
    },
    {
        "id": "381ab05bd5d981c2",
        "type": "influxdb out",
        "z": "bf6180f0.a77c6",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "d18a0817bd119966",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "Add Sensors Tag",
        "func": "switch (msg.topic)\n{\n    case \"28.FF44AB231703/temperature\": \n        msg.tag = \"tempSubsol\";\n        break;\n        \n    case \"28.FFAEAF231703/temperature\":\n        msg.tag = \"tempBoiler\";\n        break;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "3fb6bccee518bedf"
            ]
        ]
    },
    {
        "id": "88ab38b868fabaa5",
        "type": "link out",
        "z": "bf6180f0.a77c6",
        "name": "Link Out: Temp Sensors 1",
        "mode": "link",
        "links": [
            "4bae3158bbf0be09"
        ],
        "x": 1125,
        "y": 180,
        "wires": []
    },
    {
        "id": "ced754421b5736d1",
        "type": "link out",
        "z": "bf6180f0.a77c6",
        "name": "Link Out: Temp Sensors 2",
        "mode": "link",
        "links": [
            "66bc93fdb504c0da",
            "1e0a378f1995a1cd"
        ],
        "x": 755,
        "y": 320,
        "wires": []
    },
    {
        "id": "66bc93fdb504c0da",
        "type": "link in",
        "z": "bf6180f0.a77c6",
        "name": "Link In: Temp Sensors",
        "links": [
            "ced754421b5736d1"
        ],
        "x": 195,
        "y": 480,
        "wires": [
            [
                "ca6b199e.5bf298",
                "a00f3dd0d9fc8c5f"
            ]
        ]
    },
    {
        "id": "a00f3dd0d9fc8c5f",
        "type": "debug",
        "z": "bf6180f0.a77c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "f2e6ba56dc951aa7",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "Read Temperature Sensors from PiZeroW1",
        "info": "",
        "x": 220,
        "y": 240,
        "wires": []
    },
    {
        "id": "3be0aa727218274b",
        "type": "inject",
        "z": "bf6180f0.a77c6",
        "name": "Started",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "67a207e983c2c03c"
            ]
        ]
    },
    {
        "id": "67a207e983c2c03c",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "Initialize",
        "func": "\n/// CHSMaxSysTemp\nmsg.payload = 95;\nnode.send([msg]); \n\n//msg.payload = \"auto\";\n//node.send([msg]); \n\n//msg.payload = 200;\n//node.send([null, msg]); \n\n\n\n\nreturn;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 720,
        "wires": [
            [
                "ba72b6df5eb83e54"
            ],
            [],
            []
        ]
    },
    {
        "id": "93e6403c06f626c5",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "User interface initialization flow - Central Heating System (CHS)",
        "info": "",
        "x": 310,
        "y": 660,
        "wires": []
    },
    {
        "id": "ba72b6df5eb83e54",
        "type": "ui_numeric",
        "z": "bf6180f0.a77c6",
        "name": "Max System Temp",
        "label": "Prag Temperatură Maxim",
        "tooltip": "",
        "group": "0a3e100712f77794",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "CHSMaxSysTemp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "70",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 630,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "85754d8992c23413",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "Also save values to global variables for later use",
        "info": "",
        "x": 1040,
        "y": 80,
        "wires": []
    },
    {
        "id": "c464b3387290f542",
        "type": "debug",
        "z": "bf6180f0.a77c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "a3c81573605a67c9",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "ReturRad",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 960,
        "y": 500,
        "wires": []
    },
    {
        "id": "bce1e7a18e5aee70",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "Display temperature values on GUI",
        "info": "",
        "x": 200,
        "y": 420,
        "wires": []
    },
    {
        "id": "5576c3bcfce6f4eb",
        "type": "debug",
        "z": "bf6180f0.a77c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "dd7b5aeec5319c88",
        "type": "owfs",
        "z": "bf6180f0.a77c6",
        "name": "",
        "uncached": true,
        "mode": "read",
        "host": "localhost",
        "port": 4304,
        "paths": [
            "28.FFAEAF231703/temperature"
        ],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "d18a0817bd119966"
            ]
        ]
    },
    {
        "id": "24a84a694730b4a2",
        "type": "inject",
        "z": "bf6180f0.a77c6",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "9f1271ba27b894a0"
            ]
        ]
    },
    {
        "id": "9f1271ba27b894a0",
        "type": "influxdb in",
        "z": "bf6180f0.a77c6",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT\n    sum(tHorn) as sum,\n    count(tHorn) as count\n    FROM (\n        SELECT tHorn FROM \"Temperature\" \n        WHERE time >= now() - 20m and time <= now()\n    );",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 390,
        "y": 900,
        "wires": [
            [
                "9d5de0426d73ed7a"
            ]
        ]
    },
    {
        "id": "9d5de0426d73ed7a",
        "type": "function",
        "z": "bf6180f0.a77c6",
        "name": "",
        "func": "var iMsg = {\"tag\": \"Temperatură Horn\", \"payload\":0}\n\nvar jMsg =\n    {\"payload\":{ \"tHornEx\":0 }}\n\n\nfunction EnsureGlobalVar(name, value) {\n    if (typeof (value === 'number') && !isNaN(value))\n        global.set(name, value);\n    return;\n}\n\niMsg.payload = Math.round(msg.payload[0].sum / msg.payload[0].count);\nEnsureGlobalVar(\"tSens_Horn\", iMsg.payload);\njMsg.payload.tHornEx = iMsg.payload;\n\nnode.send([iMsg, jMsg]); \n\nreturn;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 900,
        "wires": [
            [
                "16a8188cfc7246c1"
            ],
            [
                "7ebe533bd5028b63"
            ]
        ]
    },
    {
        "id": "e9871f9a0706f032",
        "type": "comment",
        "z": "bf6180f0.a77c6",
        "name": "Get average of tHorn value and save it to the flow scope context variable ",
        "info": "",
        "x": 340,
        "y": 840,
        "wires": []
    },
    {
        "id": "16a8188cfc7246c1",
        "type": "ui_text",
        "z": "bf6180f0.a77c6",
        "group": "0a3e100712f77794",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Temp Horn",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "7ebe533bd5028b63",
        "type": "influxdb out",
        "z": "bf6180f0.a77c6",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 830,
        "y": 920,
        "wires": []
    },
    {
        "id": "e2bc553d01e3e92a",
        "type": "ui_dropdown",
        "z": "71c264a01ef7273c",
        "name": "Operation Mode",
        "label": "Mod de Operare",
        "tooltip": "",
        "place": "Select option",
        "group": "be76d04b6829132b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Dezactivat",
                "value": "disabled",
                "type": "str"
            },
            {
                "label": "Automat",
                "value": "auto",
                "type": "str"
            },
            {
                "label": "Manual",
                "value": "manual",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "PEHOpMode",
        "topicType": "str",
        "className": "",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "d690d76b702eca67"
            ]
        ]
    },
    {
        "id": "9bb5ffd90a062e2e",
        "type": "inject",
        "z": "71c264a01ef7273c",
        "name": "Started",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "6803b1fe98fa3f78"
            ]
        ]
    },
    {
        "id": "6803b1fe98fa3f78",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "Initialize",
        "func": "/// PEHOpMode\nmsg.payload = \"disabled\";\nnode.send([msg]); \n\n/// PEHMaxPwrImp\nmsg.payload = 200;\nnode.send([null, msg]); \n\n/// PEHMaxPuffTemp\nmsg.payload = 85;\nnode.send([null, null, msg]); \n\nreturn;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "e2bc553d01e3e92a"
            ],
            [
                "f79318fa3c6e7fc8"
            ],
            [
                "57c9d306833862e5"
            ]
        ]
    },
    {
        "id": "27bb5cf80bf67a40",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R1L1 Contactor",
        "label": "Rez1  L1",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/2",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "21a3fa46fe4ae5c8",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "",
        "func": "let iMsg = {payload: \"\", topic:\"\"};\nlet dbMsg = {payload: {}};\n\nlet rId = parseInt(msg.topic.substring(17));\nlet iOn = msg.payload == \"ON\"? 1 : 0;\nlet bOn = msg.payload == \"ON\"? true : false;\n\nswitch (rId)\n{\n    case 2:\n        fVar = \"R1L1Rel_IsON\";\n        dbMsg.payload.rConR1L1 = iOn;\n        break;\n    case 3:\n        fVar = \"R1L2Rel_IsON\";\n        dbMsg.payload.rConR1L2 = iOn;\n        break;\n    case 4:\n        fVar = \"R1L3Rel_IsON\";\n        dbMsg.payload.rConR1L3 = iOn;\n        break;\n    case 5:\n        fVar = \"R2L1Rel_IsON\";\n        dbMsg.payload.rConR2L1 = iOn;\n        break;\n    case 6:\n        fVar = \"R2L2Rel_IsON\";\n        dbMsg.payload.rConR2L2 = iOn;\n        break;\n    case 7:\n        fVar = \"R2L3Rel_IsON\";\n        dbMsg.payload.rConR2L3 = iOn;\n        break;\n}\n\nflow.set(fVar, bOn);\nnode.send([null, dbMsg]);\n\niMsg.payload = msg.payload;\niMsg.topic = msg.topic;\nmsg.payload = iMsg;\n\nreturn msg;\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 700,
        "wires": [
            [
                "c7133392a1a41cb0"
            ],
            [
                "8fcedd894250f623"
            ]
        ]
    },
    {
        "id": "c7133392a1a41cb0",
        "type": "mqtt out",
        "z": "71c264a01ef7273c",
        "name": "PiZeroW2/Relays/Set1",
        "topic": "PiZeroW2/Relays/Set1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6bf576b.0604988",
        "x": 460,
        "y": 680,
        "wires": []
    },
    {
        "id": "279b2b5cab7fde8c",
        "type": "comment",
        "z": "71c264a01ef7273c",
        "name": "Control Elecrical Power Heater",
        "info": "",
        "x": 210,
        "y": 480,
        "wires": []
    },
    {
        "id": "ad10e97c4c5fe393",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R1L2 Contactor",
        "label": "Rez1  L2",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/3",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "1939ca3bf2ba6c85",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R1L3 Contactor",
        "label": "Rez1  L3",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/4",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 600,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "bbfadd1925036ef8",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "Control Electrical Heater Contactors",
        "func": "let iL1St1 = flow.get(\"L1Stage1\");\nlet iL2St1 = flow.get(\"L2Stage1\");\nlet iL3St1 = flow.get(\"L3Stage1\");\nlet iL1St2 = flow.get(\"L1Stage2\");\nlet iL2St2 = flow.get(\"L2Stage2\");\nlet iL3St2 = flow.get(\"L3Stage2\");\n\nfunction randomTwoNo(a, b) {\n    return Math.floor(Math.random() * (2)) ? a : b;\n}\n\nfunction ContactorTurnOn(phase, stage) {\n    let swMsg = {payload: \"\", topic: \"\"};\n    let varId = phase + \"Stage\" + stage;\n    let relId;\n    \n    switch(phase)\n    {\n        case \"L1\":\n            relId = (stage == 1) ? randomTwoNo(5, 2) : (iL1St1 == 5 ? 2 : 5);\n            break;\n        case \"L2\":\n            relId = (stage == 1) ? randomTwoNo(6, 3) : (iL2St1 == 6 ? 3 : 6);\n            break;\n        case \"L3\":\n            relId = (stage == 1) ? randomTwoNo(7, 4) : (iL3St1 == 7 ? 4 : 7);\n            break;\n    }\n    flow.set(varId, relId);\n\n    swMsg.payload = \"ON\";\n    swMsg.topic = \"HeatControl/Set1/\" + relId;\n    node.send(swMsg);\n    return\n}\n\nfunction ContactorTurnOff(phase, stage) {\n    let swMsg = {payload: \"\", topic: \"\"};\n    let varId = phase + \"Stage\" + stage;\n    let relId = flow.get(varId);\n    flow.set(varId, 0);\n\n    swMsg.payload = \"OFF\";\n    swMsg.topic = \"HeatControl/Set1/\" + relId;\n    node.send(swMsg);\n    return;\n}\n\nfunction ContactorsTurnOff() {\n    ContactorTurnOff(\"L1\", 1);\n    ContactorTurnOff(\"L2\", 1);\n    ContactorTurnOff(\"L3\", 1);\n    ContactorTurnOff(\"L1\", 2);\n    ContactorTurnOff(\"L2\", 2);\n    ContactorTurnOff(\"L3\", 2);\n    return;\n}\n\nif (msg.topic === \"PEHOpMode\") \n{\n    if (msg.payload === \"disabled\") ContactorsTurnOff();\n    return;\n}\n\n\n\nconst tsPuff3 = global.get(\"tSens_Puff3\");\nconst tsCentr = global.get(\"tSens_Centrala\");\nconst csPwrPvL1 = global.get(\"cSens_PwrPvL1\");\nconst csPwrPvL2 = global.get(\"cSens_PwrPvL2\");\nconst csPwrPvL3 = global.get(\"cSens_PwrPvL3\");\nconst csPwrMainL1 = global.get(\"cSens_PwrMainL1\");\nconst csPwrMainL2 = global.get(\"cSens_PwrMainL2\");\nconst csPwrMainL3 = global.get(\"cSens_PwrMainL3\");\n\nvar rel1Id, rel2Id, rel3Id;\nvar PEHOpMode = flow.get(\"PEHOpMode\");\nif (PEHOpMode != \"auto\") return;\n\n\nlet bR1L1Rel_IsON = flow.get(\"R1L1Rel_IsON\");\nlet bR1L2Rel_IsON = flow.get(\"R1L2Rel_IsON\");\nlet bR1L3Rel_IsON = flow.get(\"R1L3Rel_IsON\");\nlet bR2L1Rel_IsON = flow.get(\"R2L1Rel_IsON\");\nlet bR2L2Rel_IsON = flow.get(\"R2L2Rel_IsON\");\nlet bR2L3Rel_IsON = flow.get(\"R2L3Rel_IsON\");\n\n\n\n\n\nconst iResPwr = 2110;\nconst iOfset = 100;\nconst iMaxImpPwr = flow.get(\"PEHMaxPwrImp\");\nconst iMaxPuffTemp = flow.get(\"PEHMaxPuffTemp\");\n\nconst iPVL1Pwr = csPwrPvL1 - csPwrMainL1;\nconst iPVL2Pwr = csPwrPvL2 - csPwrMainL2;\nconst iPVL3Pwr = csPwrPvL3 - csPwrMainL3;\nconst bMaxTempReached = (tsPuff3 > iMaxPuffTemp);\nconst bWoodHeatingIsON = (tsCentr > iMaxPuffTemp);\n\n\niPVL1Pwr + iMaxImpPwr > iResPwr\ncsPwrMainL1 - csPwrPvL1 > iMaxImpPwr\n\n\n// turn relays OFF based on consumed power and allowed max power\n\n// if we reach maximum temperature then stop all contactors\nif (bMaxTempReached || bWoodHeatingIsON)\n{\n    ContactorsTurnOff();\n    node.warn(\"We reached maximum allowed temperature. Turning off contactors.\");\n    return;\n}\n\n\n\niOffPwr = iPVL1Pwr + iMaxImpPwr + iOfset;\nif (iOffPwr < 0) \n{ \n    node.warn(\"Turning Off contactor\");\n\n    if (iL1St2 != 0) \n        ContactorTurnOff(\"L1\", 2);\n    else if (iL1St1 != 0) \n        ContactorTurnOff(\"L1\", 1);\n}\n\niOffPwr = iPVL2Pwr + iMaxImpPwr + iOfset;\nif (iOffPwr <= 0) \n{ \n    if (iL2St2 != 0) \n        ContactorTurnOff(\"L2\", 2);\n    else if (iL2St1 != 0)\n        ContactorTurnOff(\"L2\", 1);\n}\n\niOffPwr = iPVL3Pwr + iMaxImpPwr + iOfset;\nif (iOffPwr < 0)\n{ \n    if (iL3St2 != 0) \n        ContactorTurnOff(\"L3\", 2);\n    else if (iL3St1 != 0) \n        ContactorTurnOff(\"L3\", 1);\n}\n\n\n// turn relays ON based on available PV Power and allowed max power\niOnPwr = iPVL1Pwr + iMaxImpPwr;\nif (iOnPwr > iResPwr)\n{\n    node.warn(\"Turning On contactor\");\n    if (iL1St1 == 0) \n        ContactorTurnOn(\"L1\", 1); \n    else \n        ContactorTurnOn(\"L1\", 2);\n}\n\niOnPwr = iPVL2Pwr + iMaxImpPwr;\nif (iOnPwr > iResPwr)\n{\n    if (iL2St1 == 0) \n        ContactorTurnOn(\"L2\", 1);\n    else \n        ContactorTurnOn(\"L2\", 2);\n}\n\n\niOnPwr = iPVL3Pwr + iMaxImpPwr;\nif (iOnPwr > iResPwr) \n{\n    if (iL3St1 == 0) \n        ContactorTurnOn(\"L3\", 1);\n    else \n        ContactorTurnOn(\"L3\", 2);\n}\n\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "02489e20d40178ea",
                "0287ac264eb399b3",
                "7dff28ffed361ff7",
                "cfc56996d74d9951",
                "eb2a7c5e2c6e5fc7",
                "e1347443290bde0a"
            ]
        ]
    },
    {
        "id": "8fcedd894250f623",
        "type": "influxdb out",
        "z": "71c264a01ef7273c",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Relays",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 480,
        "y": 740,
        "wires": []
    },
    {
        "id": "01178b83cecd5735",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 600,
        "wires": [
            [
                "1939ca3bf2ba6c85"
            ]
        ]
    },
    {
        "id": "6e539a30cd6d4f45",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 540,
        "wires": [
            [
                "ad10e97c4c5fe393"
            ]
        ]
    },
    {
        "id": "6776bb2ce912c3a1",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 480,
        "wires": [
            [
                "27bb5cf80bf67a40"
            ]
        ]
    },
    {
        "id": "02489e20d40178ea",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 1.1",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 480,
        "wires": [
            [
                "6776bb2ce912c3a1"
            ]
        ]
    },
    {
        "id": "0287ac264eb399b3",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 1.2",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 540,
        "wires": [
            [
                "6e539a30cd6d4f45"
            ]
        ]
    },
    {
        "id": "7dff28ffed361ff7",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 1.3",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 600,
        "wires": [
            [
                "01178b83cecd5735"
            ]
        ]
    },
    {
        "id": "d7d582d852f6656c",
        "type": "comment",
        "z": "71c264a01ef7273c",
        "name": "User interface initialization flow - Puffer Electrical Heating (PEH)",
        "info": "",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "d690d76b702eca67",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "Update flow vars",
        "func": "flow.set(msg.topic, msg.payload);\n\nif (msg.topic == \"PEHOpMode\")\n{\n    node.send(msg);\n\n    if (msg.payload == \"disabled\")\n    {\n        let swMsg = {payload: \"\", topic: \"\"};\n        swMsg.payload = \"OFF\";\n        msg.topic = \"HeatControl/Set1/ALL\";\n        msg.payload = swMsg;\n        node.send([null, msg]);\n    }\n}\n\nreturn;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "f46426fedf8ced7a"
            ],
            [
                "cf3b31a42061b6fd"
            ]
        ]
    },
    {
        "id": "7503381de5692fbd",
        "type": "inject",
        "z": "71c264a01ef7273c",
        "name": "1 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "ad57c01666c76197"
            ]
        ]
    },
    {
        "id": "ad57c01666c76197",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "",
        "func": "let dbMsg = {\n    payload: {\n        rConL1: 0,\n        rConL2: 0,\n        rConL3: 0\n    }\n};\n\nlet bL1Rel_IsON = flow.get(\"L1Rel_IsON\");\nlet bL2Rel_IsON = flow.get(\"L2Rel_IsON\");\nlet bL3Rel_IsON = flow.get(\"L3Rel_IsON\");\n\ndbMsg.payload.rConL1 = bL1Rel_IsON ? 1 : 0;\ndbMsg.payload.rConL2 = bL2Rel_IsON ? 1 : 0;\ndbMsg.payload.rConL3 = bL3Rel_IsON ? 1 : 0;\n\nreturn dbMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 980,
        "wires": [
            [
                "204df69c48ed6eb9"
            ]
        ]
    },
    {
        "id": "204df69c48ed6eb9",
        "type": "influxdb out",
        "z": "71c264a01ef7273c",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Relays",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 560,
        "y": 980,
        "wires": []
    },
    {
        "id": "9c2aef2a9e8c32df",
        "type": "comment",
        "z": "71c264a01ef7273c",
        "name": "Get all relays state from the flow scope context variables ",
        "info": "",
        "x": 280,
        "y": 920,
        "wires": []
    },
    {
        "id": "81edcd71f07a2bbf",
        "type": "ui_template",
        "z": "71c264a01ef7273c",
        "group": "be76d04b6829132b",
        "name": "Page Got Loaded",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: 6, topic: window.location.host}); // this gets sent when the view is opened in the browser\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "2dfe7f50df7b89f5"
            ]
        ]
    },
    {
        "id": "2dfe7f50df7b89f5",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "BuildTemplate",
        "func": "//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n\npanelid=5\n\nvar str = msg.topic;\nstr = str.replace(\"8000\", \"3000\");\nstr = str.replace(\"1880\", \"3000\");\n\nmsg.payload= \"http://\"+str+\"/d-solo/BEPCXTmgz/heating-system?orgId=1\"+\n\"&refresh=30s\"+\n\"&theme=dark\"+\n\"&from=\"+ msg.fromdate +\n\"&to=\"+ msg.enddate +\n\"&panelId=\"+panelid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1040,
        "wires": [
            [
                "1ad290ae8ca829ff"
            ]
        ]
    },
    {
        "id": "1ad290ae8ca829ff",
        "type": "ui_template",
        "z": "71c264a01ef7273c",
        "group": "ea2c93ef1c1d2c43",
        "name": "Production vs. Consumption",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "\n<html>\n<iframe id=\"FramePid2\" width=\"310px\" height=\"300px\" style = \"overflow:hidden; margin:auto; border:0px solid green;\"></iframe>\n\n<script>\n//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('FramePid2');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "8b25d1da8a229c1b",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R2L1 Contactor",
        "label": "Rez2  L1",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/5",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 660,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "971ff55d7a6f2239",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R2L2 Contactor",
        "label": "Rez2  L2",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/6",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "88caaa4268d7380e",
        "type": "ui_switch",
        "z": "71c264a01ef7273c",
        "name": "R2L3 Contactor",
        "label": "Rez2  L3",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set1/7",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "1532fae24ff67796"
            ]
        ]
    },
    {
        "id": "7bd03bdcb9c3550e",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 780,
        "wires": [
            [
                "88caaa4268d7380e"
            ]
        ]
    },
    {
        "id": "b9623d66fce5c073",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 720,
        "wires": [
            [
                "971ff55d7a6f2239"
            ]
        ]
    },
    {
        "id": "0176c86a597565ef",
        "type": "delay",
        "z": "71c264a01ef7273c",
        "name": "Rnd.Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 910,
        "y": 660,
        "wires": [
            [
                "8b25d1da8a229c1b"
            ]
        ]
    },
    {
        "id": "cfc56996d74d9951",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 2.1",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 660,
        "wires": [
            [
                "0176c86a597565ef"
            ]
        ]
    },
    {
        "id": "eb2a7c5e2c6e5fc7",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 2.2",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/6",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 720,
        "wires": [
            [
                "b9623d66fce5c073"
            ]
        ]
    },
    {
        "id": "e1347443290bde0a",
        "type": "switch",
        "z": "71c264a01ef7273c",
        "name": "Sw 2.3",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HeatControl/Set1/7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 780,
        "wires": [
            [
                "7bd03bdcb9c3550e"
            ]
        ]
    },
    {
        "id": "1532fae24ff67796",
        "type": "link out",
        "z": "71c264a01ef7273c",
        "name": "Link Out: Contactor Buttons",
        "mode": "link",
        "links": [
            "a3d1609ad746b75b"
        ],
        "x": 1295,
        "y": 480,
        "wires": []
    },
    {
        "id": "a3d1609ad746b75b",
        "type": "link in",
        "z": "71c264a01ef7273c",
        "name": "Link In: Contactor Buttons",
        "links": [
            "1532fae24ff67796"
        ],
        "x": 95,
        "y": 700,
        "wires": [
            [
                "21a3fa46fe4ae5c8",
                "a25cbc1c068c8d1d"
            ]
        ]
    },
    {
        "id": "f79318fa3c6e7fc8",
        "type": "ui_numeric",
        "z": "71c264a01ef7273c",
        "name": "Max Import Power",
        "label": "Import maxim permis",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PEHMaxPwrImp",
        "topicType": "str",
        "format": "{{value}} W",
        "min": "100",
        "max": "2400",
        "step": "100",
        "className": "",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "d690d76b702eca67"
            ]
        ]
    },
    {
        "id": "a25cbc1c068c8d1d",
        "type": "debug",
        "z": "71c264a01ef7273c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 210,
        "y": 760,
        "wires": []
    },
    {
        "id": "57c9d306833862e5",
        "type": "ui_numeric",
        "z": "71c264a01ef7273c",
        "name": "Max Puffer Temp",
        "label": "Prag Temperatură",
        "tooltip": "",
        "group": "be76d04b6829132b",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "PEHMaxPuffTemp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "65",
        "max": "90",
        "step": "5",
        "className": "",
        "x": 550,
        "y": 240,
        "wires": [
            [
                "d690d76b702eca67"
            ]
        ]
    },
    {
        "id": "9c3e9fcdc036b206",
        "type": "inject",
        "z": "71c264a01ef7273c",
        "name": "1 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "bbfadd1925036ef8"
            ]
        ]
    },
    {
        "id": "f46426fedf8ced7a",
        "type": "link out",
        "z": "71c264a01ef7273c",
        "name": "Link Out: Puffer Elecetric Heat OpMode",
        "mode": "link",
        "links": [
            "1837be0afd3cdb38"
        ],
        "x": 975,
        "y": 160,
        "wires": []
    },
    {
        "id": "1837be0afd3cdb38",
        "type": "link in",
        "z": "71c264a01ef7273c",
        "name": "Link In: Puffer Elecetric Heat OpMode",
        "links": [
            "f46426fedf8ced7a",
            "9186d4a13034ddb8"
        ],
        "x": 215,
        "y": 580,
        "wires": [
            [
                "bbfadd1925036ef8"
            ]
        ]
    },
    {
        "id": "254d5d6bd34fad29",
        "type": "inject",
        "z": "71c264a01ef7273c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 60,
        "wires": [
            [
                "86e59b13358996cc"
            ]
        ]
    },
    {
        "id": "86e59b13358996cc",
        "type": "function",
        "z": "71c264a01ef7273c",
        "name": "Get flow vars",
        "func": "const tsPuff3 = global.get(\"tSens_Puff3\");\nconst tsCentr = global.get(\"tSens_Centrala\");\nconst csPwrPvL1 = global.get(\"cSens_PwrPvL1\");\nconst csPwrPvL2 = global.get(\"cSens_PwrPvL2\");\nconst csPwrPvL3 = global.get(\"cSens_PwrPvL3\");\nconst csPwrMainL1 = global.get(\"cSens_PwrMainL1\");\nconst csPwrMainL2 = global.get(\"cSens_PwrMainL2\");\nconst csPwrMainL3 = global.get(\"cSens_PwrMainL3\");\n\nnode.warn(csPwrMainL3);\n\n\n\nlet relId1 = flow.get(\"L1RelayId\"); \nlet relId2 = flow.get(\"L2RelayId\"); \nlet relId3 = flow.get(\"L3RelayId\"); \n\nlet bL1Rel_IsON = flow.get(\"L1Rel_IsON\");\nlet bL2Rel_IsON = flow.get(\"L2Rel_IsON\");\nlet bL3Rel_IsON = flow.get(\"L3Rel_IsON\");\n\nnode.warn(\"L1RelayId: \" + relId1 + \" is ON: \"+ bL1Rel_IsON);\nnode.warn(\"L2RelayId: \" + relId2 + \" is ON: \"+ bL2Rel_IsON);\nnode.warn(\"L3RelayId: \" + relId3 + \" is ON: \"+ bL3Rel_IsON);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "cf3b31a42061b6fd",
        "type": "link out",
        "z": "71c264a01ef7273c",
        "name": "Link Out: Set all nodes to OFF",
        "mode": "link",
        "links": [
            "15d5defbfe90d3ae"
        ],
        "x": 975,
        "y": 200,
        "wires": []
    },
    {
        "id": "15d5defbfe90d3ae",
        "type": "link in",
        "z": "71c264a01ef7273c",
        "name": "Link In: Link Out: Set all nodes to OFF",
        "links": [
            "cf3b31a42061b6fd"
        ],
        "x": 265,
        "y": 660,
        "wires": [
            [
                "c7133392a1a41cb0"
            ]
        ]
    },
    {
        "id": "2647c19a1dea1ed9",
        "type": "ui_text",
        "z": "0beb465e28a680b4",
        "group": "a8220c0c3ba2a1b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Temp Boiler",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "a75d632934584461",
        "type": "function",
        "z": "0beb465e28a680b4",
        "name": "Format Data",
        "func": "if (msg.payload.hasOwnProperty(\"tBoiler\"))\n{\n    node.send([{tag:\"Temperatură Boiler\", payload:msg.payload.tBoiler}]);\n}\n\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "2647c19a1dea1ed9"
            ]
        ],
        "outputLabels": [
            "Temp1"
        ]
    },
    {
        "id": "4bae3158bbf0be09",
        "type": "link in",
        "z": "0beb465e28a680b4",
        "name": "Link In: Temp Sensors",
        "links": [
            "88ab38b868fabaa5"
        ],
        "x": 295,
        "y": 260,
        "wires": [
            [
                "a75d632934584461",
                "542bd2894e52e829"
            ]
        ]
    },
    {
        "id": "542bd2894e52e829",
        "type": "debug",
        "z": "0beb465e28a680b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 300,
        "wires": []
    },
    {
        "id": "dc899fa3c30ed292",
        "type": "ui_dropdown",
        "z": "0beb465e28a680b4",
        "name": "Operation Mode",
        "label": "Mod de Operare",
        "tooltip": "",
        "place": "Select option",
        "group": "a8220c0c3ba2a1b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Automat",
                "value": "auto",
                "type": "str"
            },
            {
                "label": "Manual",
                "value": "manual",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "WBHOpMode",
        "topicType": "str",
        "className": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "e6739f0df02dbd25"
            ]
        ]
    },
    {
        "id": "ca85d9f6c3ac58db",
        "type": "inject",
        "z": "0beb465e28a680b4",
        "name": "Started",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "6788053aadd21fa9"
            ]
        ]
    },
    {
        "id": "6788053aadd21fa9",
        "type": "function",
        "z": "0beb465e28a680b4",
        "name": "Initialize",
        "func": "/// WBHOpMode\nmsg.payload = \"auto\";\nnode.send([msg]); \n\n/// WBHMaxBoilerTemp\nmsg.payload = 65;\nnode.send([null, msg]); \n\nreturn;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "dc899fa3c30ed292"
            ],
            [
                "eb61d56078480672"
            ],
            []
        ]
    },
    {
        "id": "181255916d40283e",
        "type": "comment",
        "z": "0beb465e28a680b4",
        "name": "User interface initialization flow - Hot Water Boiler Heating (WBH)",
        "info": "",
        "x": 310,
        "y": 60,
        "wires": []
    },
    {
        "id": "e6739f0df02dbd25",
        "type": "function",
        "z": "0beb465e28a680b4",
        "name": "Update flow vars",
        "func": "flow.set(msg.topic, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "eb61d56078480672",
        "type": "ui_numeric",
        "z": "0beb465e28a680b4",
        "name": "Max Boiler Temp",
        "label": "Prag Temperatură",
        "tooltip": "",
        "group": "a8220c0c3ba2a1b4",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "WHBMaxBoilerTemp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "60",
        "max": "70",
        "step": "1",
        "className": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "e6739f0df02dbd25"
            ]
        ]
    },
    {
        "id": "c3bb051701c8a38a",
        "type": "link in",
        "z": "0beb465e28a680b4",
        "name": "Link In: Boiler Heater Switch [out]",
        "links": [
            "ea528cdf98581df4"
        ],
        "x": 195,
        "y": 620,
        "wires": [
            [
                "0f6f52eeaf3c3052"
            ]
        ]
    },
    {
        "id": "32468f23772ac49e",
        "type": "countdown",
        "z": "0beb465e28a680b4",
        "name": "2 Hours Timer",
        "topic": "BaseStation/Relays/0",
        "payloadTimerStart": "ON",
        "payloadTimerStartType": "str",
        "payloadTimerStop": "OFF",
        "payloadTimerStopType": "str",
        "timer": "7200",
        "resetWhileRunning": false,
        "outputOnReset": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": false,
        "x": 740,
        "y": 480,
        "wires": [
            [
                "719f19e64f79acc3"
            ],
            [
                "8b5a094b1a03783e"
            ]
        ]
    },
    {
        "id": "0f6f52eeaf3c3052",
        "type": "switch",
        "z": "0beb465e28a680b4",
        "name": "Start Boiler Relay timer",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 480,
        "wires": [
            [
                "32468f23772ac49e"
            ]
        ]
    },
    {
        "id": "8b5a094b1a03783e",
        "type": "function",
        "z": "0beb465e28a680b4",
        "name": "5 min delay - Stop Boiler Relay",
        "func": "let cnt = msg.payload;\nlet stopTimerMsg = { payload: 0 };\nlet stopRelayMsg = { payload: \"OFF\" };\n\nconst tMax = flow.get(\"WHBMaxBoilerTemp\");\nconst tBoiler = global.get(\"tSens_Boiler\");\n\nif ((cnt != 0 ) && (cnt % 300 == 0))\n{\n    if (tBoiler > tMax)\n        node.send([stopTimerMsg, stopRelayMsg]);\n}\n\nreturn;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "32468f23772ac49e"
            ],
            [
                "719f19e64f79acc3"
            ]
        ]
    },
    {
        "id": "719f19e64f79acc3",
        "type": "link out",
        "z": "0beb465e28a680b4",
        "name": "Link Out: Boiler Heater Switch [in]",
        "mode": "link",
        "links": [
            "e4ecee634a92e0e6"
        ],
        "x": 935,
        "y": 520,
        "wires": []
    },
    {
        "id": "2d8bac77e2b97aca",
        "type": "comment",
        "z": "0beb465e28a680b4",
        "name": "Control Boiler Heater Relay Switch",
        "info": "Start at 11:00 and 14:00 of the daty time.\nRun each session for 2 hours.\nStops if bolire reach treshold temperature.",
        "x": 220,
        "y": 420,
        "wires": []
    },
    {
        "id": "8c935d3a2c95574d",
        "type": "schedex",
        "z": "0beb465e28a680b4",
        "name": "",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "",
        "lon": "",
        "ontime": "11:00",
        "ontopic": "",
        "onpayload": "ON",
        "onoffset": 0,
        "onrandomoffset": false,
        "offtime": "11:05",
        "offtopic": "OFF",
        "offpayload": "",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 150,
        "y": 480,
        "wires": [
            [
                "0f6f52eeaf3c3052"
            ]
        ]
    },
    {
        "id": "013f1e54e9f75c8a",
        "type": "schedex",
        "z": "0beb465e28a680b4",
        "name": "",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "",
        "lon": "",
        "ontime": "14:00",
        "ontopic": "",
        "onpayload": "ON",
        "onoffset": 0,
        "onrandomoffset": false,
        "offtime": "14:05",
        "offtopic": "OFF",
        "offpayload": "",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 150,
        "y": 540,
        "wires": [
            [
                "0f6f52eeaf3c3052"
            ]
        ]
    },
    {
        "id": "bbf3a3a3.d3ded",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1250,
        "y": 100,
        "wires": []
    },
    {
        "id": "8e94dc3c.53372",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Relay 1 - Garden Lights",
        "label": "Garden Lights",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/1",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "1696d1e5.dc7c6e",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Relay 5 - Garden Springlers",
        "label": "Garden Springlers",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/5",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "fc670a12.2837a8",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "d": true,
        "name": "Relay 2 - Christmas Lights",
        "label": "Christmas Lights",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/2",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "3cb5540d.7b92fc",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "MCP2300 Data",
        "info": "[{\"id\":\"be41994.5e56368\",\"type\":\"mcp23008\",\"z\":\"7bdd12a2.8a06ac\",\"name\":\"MCP23008 UniPi (0x20)\",\"topic\":\"relays/unipi-board\",\"address\":\"0x20\",\"bus\":\"1\",\"reverse\":true,\"x\":919,\"y\":346,\"wires\":[[]]}]",
        "x": 1000,
        "y": 60,
        "wires": []
    },
    {
        "id": "6e4023f.efdf1dc",
        "type": "mcp23008",
        "z": "2897d003.78d0a",
        "name": "MCP23008 (0x22)",
        "topic": "BaseStation/Relays",
        "address": "0x22",
        "bus": "1",
        "reverse": true,
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "bbf3a3a3.d3ded"
            ]
        ]
    },
    {
        "id": "20304835.a1d608",
        "type": "schedex",
        "z": "2897d003.78d0a",
        "name": "",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "45.60",
        "lon": "25.46",
        "ontime": "",
        "ontopic": "",
        "onpayload": "",
        "onoffset": 0,
        "onrandomoffset": 0,
        "offtime": "0:00",
        "offtopic": "",
        "offpayload": "OFF",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 90,
        "y": 160,
        "wires": [
            [
                "8e94dc3c.53372"
            ]
        ]
    },
    {
        "id": "4d58a8d7.cc8ac8",
        "type": "schedex",
        "z": "2897d003.78d0a",
        "name": "",
        "passthroughunhandled": false,
        "suspended": false,
        "lat": "45.60",
        "lon": "25.46",
        "ontime": "dusk",
        "ontopic": "",
        "onpayload": "ON",
        "onoffset": 0,
        "onrandomoffset": 0,
        "offtime": "nightEnd",
        "offtopic": "",
        "offpayload": "OFF",
        "offoffset": 0,
        "offrandomoffset": 0,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "8e94dc3c.53372"
            ]
        ]
    },
    {
        "id": "9bf5e32c.bf2c6",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Relay 0 - Hot Water Tank",
        "label": "Încălzire electrică Boiler",
        "tooltip": "",
        "group": "a8220c0c3ba2a1b4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/0",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "ea528cdf98581df4",
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "2056b3c6.b4f11c",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "d": true,
        "name": "Relay 4 -",
        "label": "Relay 4",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/4",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 680,
        "y": 260,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "16e39e94.04da21",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "d": true,
        "name": "Relay 3 - ",
        "label": "Relay 3",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/3",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "e191045a.b2cce8",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "d": true,
        "name": "Relay 6 -",
        "label": "Relay 6",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "BaseStation/Relays/6",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "0296d29a865c050b"
            ]
        ]
    },
    {
        "id": "7ab9b80687fba367",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Set2 / Relay7 - Boiler Pump",
        "label": "Pompă recirculare Boiler",
        "tooltip": "",
        "group": "a8220c0c3ba2a1b4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/7",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 420,
        "y": 560,
        "wires": [
            [
                "9c07b02cfa0a571c"
            ]
        ]
    },
    {
        "id": "d326f73d3f01033f",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Set2 / Relay6 - Kitchen floor pump",
        "label": "Pompa pardoselă Bucătărie",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/6",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 440,
        "y": 500,
        "wires": [
            [
                "9c07b02cfa0a571c"
            ]
        ]
    },
    {
        "id": "f096e556561ec92a",
        "type": "mqtt out",
        "z": "2897d003.78d0a",
        "name": "PiZeroW2/Relays/Set2",
        "topic": "PiZeroW2/Relays/Set2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6bf576b.0604988",
        "x": 1100,
        "y": 420,
        "wires": []
    },
    {
        "id": "9c07b02cfa0a571c",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let iMsg = {payload: \"\", topic:\"\"};\nlet dbMsg = {payload: {}};\nlet varName = null, varValue = null;\n\nswitch (msg.payload)\n{\n    case \"ON\":\n        varValue = true;\n        break;\n    case \"OFF\":\n        varValue = false;\n        break;\n}\n\nswitch (msg.topic)\n{\n    case \"HeatControl/Set2/7\":\n        varName = \"BolierPump_IsON\";\n        dbMsg.payload.rBoilerPump = varValue ? 1 : 0;\n        break;\n        \n    case \"HeatControl/Set2/6\":\n        varName = \"KitchenPump_IsON\";\n        dbMsg.payload.rKitchenPump = varValue ? 1 : 0;\n        break;\n        \n    case \"HeatControl/Set2/4\":\n        varName = \"OverridePump_IsON\";\n        dbMsg.payload.rOverridePump = varValue ? 1 : 0;\n        break;\n}\n\nif (varName !== null)\n{\n    flow.set(varName, varValue);\n    node.send([null, dbMsg]);\n}\n\niMsg.payload = msg.payload;\niMsg.topic = msg.topic;\nmsg.payload = iMsg;\n\nreturn msg;\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 440,
        "wires": [
            [
                "f096e556561ec92a"
            ],
            [
                "971412e363f7fa77"
            ]
        ]
    },
    {
        "id": "e4b667190ebee452",
        "type": "link in",
        "z": "2897d003.78d0a",
        "name": "Link In: Control Boiler Relay Pump",
        "links": [
            "15d9be46ab806ae5",
            "4227ee434436a8d3"
        ],
        "x": 215,
        "y": 560,
        "wires": [
            [
                "7ab9b80687fba367"
            ]
        ]
    },
    {
        "id": "e78249ce9e1f1c83",
        "type": "influxdb in",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT \n    last(tBoiler) as tBoiler, \n    mean(tBoiler) as tBoilerAvg,\n    last(tCentrala) as tCentrala, \n    mean(tCentrala) as tCentralaAvg,\n    last(tCTTur) as tCTTur, \n    last(tPuff1) as tPuff1, \n    last(tPuff2) as tPuff2, \n    last(tPuff3) as tPuff3\nFROM \"Temperature\" \nWHERE time >= now() - 5m\n-- GROUP BY time;\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 860,
        "wires": [
            [
                "e5c3c35034bee7ad"
            ]
        ]
    },
    {
        "id": "8725ed81234efc3e",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "e78249ce9e1f1c83"
            ]
        ]
    },
    {
        "id": "2d4f4284c1b06e41",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Run Boiler Pump Relay to Heat Water Tank",
        "info": "",
        "x": 240,
        "y": 820,
        "wires": []
    },
    {
        "id": "e5c3c35034bee7ad",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "Control boiler pump relay",
        "func": "let swMsg = {\n    payload: \"\",\n    topic: \"HeatControl/Relays/0\"\n};\n\nconst tBoiler_High = 70;\nconst tBoiler_Low = 60;\n\nconst tPuff3_Low = 70;\nconst tPuff2_Low = 65;\nconst tPuff1_Low = 60;\n\nconst tPuff3_High = 85;\nconst tPuff1_High = 75;\n\nlet tBolierPump_IsON = flow.get(\"BolierPump_IsON\");\nlet lastCTLowTempValue = flow.get(\"lastCTLowTempValue\");\nlet lastCTLowTempData = flow.get(\"lastCTLowTempData\");\n\n\nif(lastCTLowTempValue === undefined) return;\nif(lastCTLowTempValue === undefined) return;\nif(tsPuff1 === null) return;\nif(tsPuff2 === null) return;\nif(tsPuff3 === null) return;\n\n\nnode.warn('tBolierPump_IsON' + tBolierPump_IsON);\nnode.warn('lastCTLowTempValue' + lastCTLowTempValue);\nnode.warn('lastCTLowTempData' + lastCTLowTempData);\nnode.warn('tCentrala' + tCentrala);\nnode.warn('tCTTur' + tCTTur);\nnode.warn('tPuff1' + tPuff1);\nnode.warn('tPuff2' + tPuff2);\nnode.warn('tPuff3' + tPuff3);\nnode.warn('tBoiler' + tBoiler);\nnode.warn('tCentrala_IsRaising' + tCentrala_IsRaising);\n\n\n\nif (tCentrala < lastCTLowTempValue)\n{\n    flow.set(\"lastCTLowTempValue\", tCentrala);\n    flow.set(\"lastCTLowTempData\", Date.now());\n    node.warn('Lower temp detected: ' + tCentrala + '°C on ' + Date.now());\n}\n\n// boiler temp is lowert than and higher than\n// CT temp is higher than spec value\n// CT temp is raising\n\nif (tBolierPump_IsON) {\n    if (\n        // Temperatura in boiler a atins limita maxima\n        (tBoiler > tBoiler_High) ||\n        // Temperatura in puffer/centrala nu mai este suficienta\n        ((!tCentrala_IsRaising) && (tPuff3 < tPuff3_Low) && (tPuff1 < tPuff1_Low)) ||\n        // Temperatura in puffer \n        (tCTTur < tBoiler + 10)\n    ) {\n        swMsg.payload = \"OFF\";\n        node.send([swMsg]);\n    }\n\n    // Turn OFF boiler pump if is running for more than 2 hours without any results\n\n    // Turn OFF boiler pump if temp is system is to low to heat the boiler\n} else { // temepeartura in boiler nu este peste limita maxima \n    if (tBoiler < tBoiler_High && (\n            // Daca temperatura in centrala si puffer sunt f. ridicate\n            ((tPuff3 > tPuff3_High) && (tPuff1 > tPuff1_High)) ||\n            // Daca temperatura din boiler este mica si exista suficeinta energie in puffer\n            ((tPuff3 > tBoiler + 15) && tCentrala_IsRaising && (tPuff3 > tPuff3_Low))\n\n        )) {\n        swMsg.payload = \"ON\";\n        node.send([swMsg]);\n    }\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 860,
        "wires": [
            [
                "15d9be46ab806ae5"
            ]
        ]
    },
    {
        "id": "15d9be46ab806ae5",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Control Boiler Relay Pump",
        "mode": "link",
        "links": [
            "e4b667190ebee452"
        ],
        "x": 855,
        "y": 860,
        "wires": []
    },
    {
        "id": "349db21a650eb457",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let swMsg = {\n    payload: \"\",\n    topic: \"HeatControl/Relays/0\"\n};\n\n\nlet lastCTLowTempValue = flow.get(\"lastCTLowTempValue\");\nlet lastCTLowTempData = flow.get(\"lastCTLowTempData\");\n\nnode.warn('Now: ' + Date.now());\nnode.warn('lastCTLowTempData: ' + lastCTLowTempData);\nvar diff = Date.now() - lastCTLowTempData;\n\nnode.warn(\"Diff from last update is: \" + diff/(1000*60) + 'min');\n\n\nswMsg.payload = \"OFF\";\n        dbMsg.payload.rBoiler = 0;\n        tBolierPump_IsON = false;\n        flow.set(\"tBolierPump_IsON\", tBolierPump_IsON);\n        node.send([swMsg]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "1990e8abfd403d70",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1820,
        "wires": [
            [
                "349db21a650eb457"
            ]
        ]
    },
    {
        "id": "dfb0f9afc9874e00",
        "type": "influxdb in",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT \n    last(tBoiler) as tBoiler, \n    mean(tBoiler) as tBoilerAvg,\n    last(tCentrala) as tCentrala, \n    mean(tCentrala) as tCentralaAvg,\n    last(tCTTur) as tCTTur, \n    last(tPuff1) as tPuff1, \n    last(tPuff2) as tPuff2, \n    last(tPuff3) as tPuff3\nFROM \"Temperature\" \nWHERE time >= now() - 5m\n-- GROUP BY time;\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 1780,
        "wires": [
            [
                "1028546c79679aaf"
            ]
        ]
    },
    {
        "id": "6b90673cdabbe63b",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1780,
        "wires": [
            [
                "dfb0f9afc9874e00"
            ]
        ]
    },
    {
        "id": "1028546c79679aaf",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "\nif (\"topic\" in msg)\n{\n    node.warn(\"Hello\");\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1780,
        "wires": [
            [
                "61dd3ad6591829f8"
            ]
        ]
    },
    {
        "id": "61dd3ad6591829f8",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ea528cdf98581df4",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Boiler Heater Switch [out]",
        "mode": "link",
        "links": [
            "c3bb051701c8a38a"
        ],
        "x": 595,
        "y": 80,
        "wires": []
    },
    {
        "id": "e4ecee634a92e0e6",
        "type": "link in",
        "z": "2897d003.78d0a",
        "name": "Link In: Boiler Heater Switch [in]",
        "links": [
            "db29e270d656aee9",
            "719f19e64f79acc3"
        ],
        "x": 235,
        "y": 100,
        "wires": [
            [
                "9bf5e32c.bf2c6"
            ]
        ]
    },
    {
        "id": "db702c7638776f5e",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Set2 / Relay4 - Main Pump Override",
        "label": "Supra temperatură Centrala T. Ignoră termostat",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/4",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "9c07b02cfa0a571c",
                "66023adec10d988d"
            ]
        ]
    },
    {
        "id": "97d228a24b6cee4a",
        "type": "influxdb in",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT *\nFROM \"Relays\" \nWHERE time >= now() - 5m\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 1740,
        "wires": [
            [
                "4b5031a2cc144fe7"
            ]
        ]
    },
    {
        "id": "28b4e2c86db15d40",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1740,
        "wires": [
            [
                "97d228a24b6cee4a"
            ]
        ]
    },
    {
        "id": "4b5031a2cc144fe7",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1740,
        "wires": []
    },
    {
        "id": "cc09a78b104bbedf",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Some testing stuff",
        "info": "",
        "x": 170,
        "y": 1700,
        "wires": []
    },
    {
        "id": "e5479898ac15c3ab",
        "type": "influxdb out",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Relays",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1040,
        "y": 160,
        "wires": []
    },
    {
        "id": "91f2c49e481c96cc",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "1 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1520,
        "wires": [
            [
                "3eee0f77b2e4a054"
            ]
        ]
    },
    {
        "id": "3eee0f77b2e4a054",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let dbMsg = {\n    payload: {\n        rBoilerHeater: 0,\n        rBoilerPump: 0,\n        rKitchenPump: 0,\n        rOverridePump: 0\n    }\n};\n\nlet bBolierHeat = flow.get(\"BolierHeat_IsON\");\nlet bBolierPump = flow.get(\"BolierPump_IsON\");\nlet bKitchenPump = flow.get(\"KitchenPump_IsON\");\nlet bOverridePump = flow.get(\"OverridePump_IsON\");\n\ndbMsg.payload.rBoilerHeater = bBolierHeat ? 1 : 0;\ndbMsg.payload.rBoilerPump   = bBolierPump ? 1 : 0;\ndbMsg.payload.rKitchenPump  = bKitchenPump ? 1 : 0;\ndbMsg.payload.rOverridePump = bOverridePump ? 1 : 0;\n\nreturn dbMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1520,
        "wires": [
            [
                "d459974d7715080d",
                "b0ffd98c2ab7fdf3"
            ]
        ]
    },
    {
        "id": "d459974d7715080d",
        "type": "influxdb out",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Relays",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 560,
        "y": 1520,
        "wires": []
    },
    {
        "id": "eed09d196483470f",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Get all relays state from the global variables ",
        "info": "",
        "x": 250,
        "y": 1480,
        "wires": []
    },
    {
        "id": "971412e363f7fa77",
        "type": "influxdb out",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Relays",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1120,
        "y": 480,
        "wires": []
    },
    {
        "id": "b0ffd98c2ab7fdf3",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1560,
        "wires": []
    },
    {
        "id": "82474d7138f7efb9",
        "type": "influxdb in",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT\n    CASE \n        WHEN \"PwrPvL1\" > \"PwrMainL1\" THEN \"PwrPvL1\" - \"PwrMainL1\"\n        ELSE 0 \n    END\nFROM \"Energy\"\nWHERE time >= now() - 5m\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 1860,
        "wires": [
            [
                "8da450022ad9dcdd"
            ]
        ]
    },
    {
        "id": "6d8f18e7f254db35",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1860,
        "wires": [
            [
                "82474d7138f7efb9"
            ]
        ]
    },
    {
        "id": "8da450022ad9dcdd",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "278fd53322393bf3",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Set2 / Relay5",
        "label": "Relay 5",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/5",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "9c07b02cfa0a571c"
            ]
        ]
    },
    {
        "id": "8ffa5311c31985a0",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "d": true,
        "name": "Set2 / Relay3 - Low CT Temp Override ",
        "label": "Temperatura scăzută Coș Fum Opreste pompa CT",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/3",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "9c07b02cfa0a571c"
            ]
        ]
    },
    {
        "id": "da5f64a862c54771",
        "type": "ui_switch",
        "z": "2897d003.78d0a",
        "name": "Set2 / Relay2",
        "label": "Relay 2",
        "tooltip": "",
        "group": "2a8bf519.1f58ea",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "HeatControl/Set2/2",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 780,
        "y": 520,
        "wires": [
            [
                "9c07b02cfa0a571c"
            ]
        ]
    },
    {
        "id": "e743c256d719f2f9",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Run Boiler Pump Relay to heat Boiler and mix Puffer water ",
        "info": "",
        "x": 290,
        "y": 940,
        "wires": []
    },
    {
        "id": "1cab8475a7a17108",
        "type": "countdown",
        "z": "2897d003.78d0a",
        "name": "30 min timer",
        "topic": "HeatControl/Set2/7",
        "payloadTimerStart": "ON",
        "payloadTimerStartType": "str",
        "payloadTimerStop": "OFF",
        "payloadTimerStopType": "str",
        "timer": "1800",
        "resetWhileRunning": false,
        "outputOnReset": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": false,
        "x": 550,
        "y": 980,
        "wires": [
            [
                "4227ee434436a8d3"
            ],
            []
        ]
    },
    {
        "id": "7c841398322465d5",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "b4654340b87e278c"
            ]
        ]
    },
    {
        "id": "b4654340b87e278c",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let optPuffDiffTemp = flow.get(\"OPTPufferDiffTemp\");\nlet bBolierPump_IsON = flow.get(\"BolierPump_IsON\");\nlet tsPuff1 = global.get(\"tSens_Puff1\");\nlet tsPuff4 = global.get(\"tSens_Puff4\");\nlet tsBoiler = global.get(\"tSens_Boiler\");\n\nif(tsPuff1 === undefined) return;\nif(tsPuff4 === undefined) return;\nif(tsBoiler === undefined) return;\n\n/// DO NOT Turn ON if:\n///     - Already turned ON\n///     - optPuffDiffTemp is not reached\n///     - Boiler temp is higher than Top puffer Temp\nif (bBolierPump_IsON) return;\nif ((tsPuff4 - tsPuff1) < optPuffDiffTemp) return;\nif (tsPuff4 < tsBoiler) return;\n\n\n\n/// Torn ON if:\n///     - \n\n\n\n\n/// Turn OFF if:\n///     -\n///     -\n///     -\n///     -\n///     -\n\n\n/*\n\n    // Turn OFF boiler pump if temp is system is to low to heat the boiler\n} else { // temepeartura in boiler nu este peste limita maxima \n    if (tBoiler < tBoiler_High && (\n            // Daca temperatura in centrala si puffer sunt f. ridicate\n            ((tPuff3 > tPuff3_High) && (tPuff1 > tPuff1_High)) ||\n            // Daca temperatura din boiler este mica si exista suficeinta energie in puffer\n            ((tPuff3 > tBoiler + 15) && tCentrala_IsRaising && (tPuff3 > tPuff3_Low))\n\n\n\n\n*/\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 980,
        "wires": [
            [
                "1cab8475a7a17108"
            ]
        ]
    },
    {
        "id": "4227ee434436a8d3",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Control Boiler Relay Pump",
        "mode": "link",
        "links": [
            "e4b667190ebee452"
        ],
        "x": 695,
        "y": 980,
        "wires": []
    },
    {
        "id": "580ab420d17085bf",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Run Main Pump Override on Higher Temp",
        "info": "Porneste pompa Puffer - Boiler tim de 30 de minute\npentru a amesteca apa in puffer daca difereta de \ntemperatura din puffer (min / max) este mai mare\nde 40 grade.\n\nToDo:\n - poate diferenta de 40 este prea mare (30 / 35)?\n - revizuit temperatura puffer / boiler pentru a \n   evita situatia de a racii apa din boiler",
        "x": 240,
        "y": 1060,
        "wires": []
    },
    {
        "id": "13c74527eb8eac66",
        "type": "countdown",
        "z": "2897d003.78d0a",
        "name": "30 min timer",
        "topic": "HeatControl/Set2/7",
        "payloadTimerStart": "ON",
        "payloadTimerStartType": "str",
        "payloadTimerStop": "OFF",
        "payloadTimerStopType": "str",
        "timer": "1800",
        "resetWhileRunning": false,
        "outputOnReset": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": false,
        "x": 550,
        "y": 1100,
        "wires": [
            [
                "298c28faf81e6d4a"
            ],
            []
        ]
    },
    {
        "id": "2d94389781c337f9",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "ed73cca0aa63184a"
            ]
        ]
    },
    {
        "id": "ed73cca0aa63184a",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let optHighTempOverride = flow.get(\"OPTHighTempOverride\");\nlet bOverridePump_IsON = flow.get(\"OverridePump_IsON\");\nlet tsPuff4 = global.get(\"tSens_Puff4\");\nlet tsCentrala = global.get(\"tSens_Centrala\");\n\nif(tsPuff4 === undefined) return;\nif(tsPuff4 === undefined) return;\n\nif (bOverridePump_IsON) return;\nif (tsPuff4 < optHighTempOverride) return;\nif (tsCentrala < optHighTempOverride) return;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "13c74527eb8eac66"
            ]
        ]
    },
    {
        "id": "298c28faf81e6d4a",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Control Override Pump",
        "mode": "link",
        "links": [
            "4c45a394dce23aaf"
        ],
        "x": 695,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4c45a394dce23aaf",
        "type": "link in",
        "z": "2897d003.78d0a",
        "name": "Link In: Control Override Pump",
        "links": [
            "298c28faf81e6d4a"
        ],
        "x": 215,
        "y": 440,
        "wires": [
            [
                "db702c7638776f5e"
            ]
        ]
    },
    {
        "id": "0296d29a865c050b",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let dbMsg = {payload: {}};\nlet varName = null, varValue = null;\n\nswitch (msg.payload)\n{\n    case \"ON\":\n        varValue = true;\n        break;\n    case \"OFF\":\n        varValue = false;\n        break;\n}\n\nswitch (msg.topic)\n{\n    case \"BaseStation/Relays/0\":\n        varName = \"BolierHeat_IsON\";\n        dbMsg.payload.rBoilerHeater = varValue ? 1 : 0;\n        break;\n}\n\nif (varName !== null)\n{\n    flow.set(varName, varValue);\n    node.send([null, dbMsg]);\n}\n\nreturn msg;\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 120,
        "wires": [
            [
                "6e4023f.efdf1dc"
            ],
            [
                "e5479898ac15c3ab"
            ]
        ]
    },
    {
        "id": "d0b256c8794a3fd8",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "Started",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 160,
        "y": 1300,
        "wires": [
            [
                "2214a826d58df1d4"
            ]
        ]
    },
    {
        "id": "2214a826d58df1d4",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "Initialize",
        "func": "/// OPTPufferDiffTemp\nmsg.payload = 30;\nnode.send([msg]); \n\n/// OPTHighTempOverride\nmsg.payload = 95;\nnode.send([null, msg]); \n\n/// OPTKitFloorTempMin\nmsg.payload = 40;\nnode.send([null, null, msg]); \n\nreturn;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1340,
        "wires": [
            [
                "c372ded5d6c2a739"
            ],
            [
                "42480eb18455f883"
            ],
            [
                "e0fcf81c18921482"
            ]
        ]
    },
    {
        "id": "f8263ddc20b0b11a",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "User interface initialization flow - Hot Water Boiler Heating (WBH)",
        "info": "",
        "x": 310,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a707c8aa24f6f257",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "Update flow vars",
        "func": "flow.set(msg.topic, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "c372ded5d6c2a739",
        "type": "ui_numeric",
        "z": "2897d003.78d0a",
        "name": "Puffer Temp Diff for Mix ",
        "label": "Puffer Temp Diff for Mix ",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "OPTPufferDiffTemp",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "10",
        "max": "40",
        "step": "2",
        "className": "",
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "a707c8aa24f6f257"
            ]
        ]
    },
    {
        "id": "42480eb18455f883",
        "type": "ui_numeric",
        "z": "2897d003.78d0a",
        "name": "Max Temp for System Override",
        "label": "Prag Supra Temp. CT",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "OPTHighTempOverride",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "90",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "a707c8aa24f6f257"
            ]
        ]
    },
    {
        "id": "5199434d82ba507f",
        "type": "function",
        "z": "2897d003.78d0a",
        "name": "",
        "func": "let swMsg = {\n    payload: \"\",\n    topic: \"HeatControl/Set2/6\"\n};\n\nvar curTime = new Date();\nvar startPumpTime = new Date();\nvar stopPumpTime = new Date();\n\nstartPumpTime.setHours(6,30,0); // 6.30 am\nstopPumpTime.setHours(22,0,0); // 6.30 pm\n\nlet tPuffTemp = global.get(\"tSens_Puff2\");\nlet optPuffTempMin = flow.get(\"OPTKitFloorTempMin\");\nlet bKitchenPump_IsON = flow.get(\"KitchenPump_IsON\");\nlet bInActiveHours = (curTime >= startPumpTime && curTime < stopPumpTime);\n\nif (bKitchenPump_IsON) {\n    // Stop it if not in active hours or temp is lower than treshold\n    if (!bInActiveHours || (tPuffTemp<optPuffTempMin))\n    {\n        swMsg.payload = \"OFF\";\n        node.send([swMsg]);\n    }\n\n} else {\n    // Start it in active hours and temp is higher than treshold\n    if (bInActiveHours && (tPuffTemp>optPuffTempMin))\n    {\n        swMsg.payload = \"ON\";\n        node.send([swMsg]);\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 740,
        "wires": [
            [
                "94dd54a3ca8ed899"
            ]
        ]
    },
    {
        "id": "d10d48fe19dfd777",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "5 min tick",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "5199434d82ba507f"
            ]
        ]
    },
    {
        "id": "94dd54a3ca8ed899",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Control Kitchen Floor Relay Pump",
        "mode": "link",
        "links": [
            "f0544463a1fc5b34"
        ],
        "x": 495,
        "y": 740,
        "wires": []
    },
    {
        "id": "f0544463a1fc5b34",
        "type": "link in",
        "z": "2897d003.78d0a",
        "name": "Link In: Control Kitchen Floor Relay Pump",
        "links": [
            "94dd54a3ca8ed899"
        ],
        "x": 215,
        "y": 500,
        "wires": [
            [
                "d326f73d3f01033f"
            ]
        ]
    },
    {
        "id": "20ef2b0e5a2f7419",
        "type": "comment",
        "z": "2897d003.78d0a",
        "name": "Run Kitchen Floor Pump Relay",
        "info": "",
        "x": 210,
        "y": 700,
        "wires": []
    },
    {
        "id": "e0fcf81c18921482",
        "type": "ui_numeric",
        "z": "2897d003.78d0a",
        "name": "Min Temp for Kitchen Floor",
        "label": "Prag Temp. Bucatarie",
        "tooltip": "",
        "group": "7481df2b3b27f847",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "OPTKitFloorTempMin",
        "topicType": "str",
        "format": "{{value}} °C",
        "min": "35",
        "max": "55",
        "step": "1",
        "className": "",
        "x": 580,
        "y": 1400,
        "wires": [
            [
                "a707c8aa24f6f257"
            ]
        ]
    },
    {
        "id": "2329ba0a9a04a3ec",
        "type": "influxdb in",
        "z": "2897d003.78d0a",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "DROP SERIES FROM /.*/\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 1900,
        "wires": [
            [
                "adbcd1b6b05152ee"
            ]
        ]
    },
    {
        "id": "723a62fe0b356cc8",
        "type": "inject",
        "z": "2897d003.78d0a",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 1900,
        "wires": [
            [
                "2329ba0a9a04a3ec"
            ]
        ]
    },
    {
        "id": "adbcd1b6b05152ee",
        "type": "debug",
        "z": "2897d003.78d0a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1900,
        "wires": []
    },
    {
        "id": "81bcef47f1f692e8",
        "type": "switch",
        "z": "2897d003.78d0a",
        "name": "Start Pump Override timer",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 1160,
        "wires": [
            [
                "13c74527eb8eac66"
            ]
        ]
    },
    {
        "id": "66023adec10d988d",
        "type": "link out",
        "z": "2897d003.78d0a",
        "name": "Link Out: Pump Override timer [out]",
        "mode": "link",
        "links": [
            "2292f0da04a5f60c"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "2292f0da04a5f60c",
        "type": "link in",
        "z": "2897d003.78d0a",
        "name": "Link In: Pump Override timer [in]",
        "links": [
            "66023adec10d988d"
        ],
        "x": 145,
        "y": 1160,
        "wires": [
            [
                "81bcef47f1f692e8"
            ]
        ]
    },
    {
        "id": "065c8dafd4d5526f",
        "type": "mqtt in",
        "z": "53727ccd522e1e45",
        "name": "",
        "topic": "esp32-d01-DBD320",
        "qos": "2",
        "datatype": "auto",
        "broker": "6bf576b.0604988",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "7184ab33d3137b17"
            ]
        ]
    },
    {
        "id": "7184ab33d3137b17",
        "type": "json",
        "z": "53727ccd522e1e45",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "e5deb9014489370c"
            ]
        ]
    },
    {
        "id": "90992c0e5f59ef4e",
        "type": "comment",
        "z": "53727ccd522e1e45",
        "name": "Receive power data via MQTT and drop it to power_device_1 table",
        "info": "",
        "x": 360,
        "y": 240,
        "wires": []
    },
    {
        "id": "4339fa1f3ab3d253",
        "type": "inject",
        "z": "53727ccd522e1e45",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "e35579f36d3c3e4e"
            ]
        ]
    },
    {
        "id": "e35579f36d3c3e4e",
        "type": "sqlite",
        "z": "53727ccd522e1e45",
        "mydb": "e5571c1e.f9dd8",
        "sqlquery": "fixed",
        "sql": "-- It looks like only one statement is executed\n--\n-- DROP TABLE IF EXISTS 'power_device_1';\n\nCREATE TABLE 'power_device_2' (\n    'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\n    'device' TEXT DEFAULT \"PS1\", \n    'Time' TEXT,\n    'G1L1' REAL, 'G1L2' REAL, 'G1L3' REAL,\n    'G2L1' REAL, 'G2L2' REAL, 'G2L3' REAL,\n    'G3L1' REAL, 'G3L2' REAL, 'G3L3' REAL );\n",
        "name": "HomeControl.db",
        "x": 400,
        "y": 100,
        "wires": [
            [
                "0c1435873f44f80b"
            ]
        ]
    },
    {
        "id": "b9d9b496be8da8f2",
        "type": "comment",
        "z": "53727ccd522e1e45",
        "name": "Deploy Power Sensor Tables  (existing will be droppped)",
        "info": "There will be one table for each device",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "0c1435873f44f80b",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0449da39b710879",
        "type": "mqtt in",
        "z": "53727ccd522e1e45",
        "name": "",
        "topic": "esp32-d02-D66A14",
        "qos": "2",
        "datatype": "auto",
        "broker": "6bf576b.0604988",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "57974eb0863c12e7"
            ]
        ]
    },
    {
        "id": "57974eb0863c12e7",
        "type": "json",
        "z": "53727ccd522e1e45",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 380,
        "wires": [
            [
                "7dd946f1893703e0"
            ]
        ]
    },
    {
        "id": "c2811f87fb6e4b77",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "ce7b05095682a12c",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 380,
        "wires": []
    },
    {
        "id": "e5deb9014489370c",
        "type": "change",
        "z": "53727ccd522e1e45",
        "name": "Set device 1",
        "rules": [
            {
                "t": "set",
                "p": "devices",
                "pt": "msg",
                "to": "dev1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 300,
        "wires": [
            [
                "501dcdc1b83935a1",
                "8410373b9c2a9964"
            ]
        ]
    },
    {
        "id": "7dd946f1893703e0",
        "type": "change",
        "z": "53727ccd522e1e45",
        "name": "Set device 2",
        "rules": [
            {
                "t": "set",
                "p": "devices",
                "pt": "msg",
                "to": "dev2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 380,
        "wires": [
            [
                "501dcdc1b83935a1",
                "aee77072828f0791"
            ]
        ]
    },
    {
        "id": "501dcdc1b83935a1",
        "type": "join-wait",
        "z": "53727ccd522e1e45",
        "name": "",
        "paths": "[\"dev1\", \"dev2\"]",
        "pathsToExpire": "",
        "useRegex": false,
        "warnUnmatched": false,
        "pathTopic": "devices",
        "pathTopicType": "msg",
        "correlationTopic": "",
        "correlationTopicType": "msg",
        "timeout": "15",
        "timeoutUnits": "1000",
        "exactOrder": "false",
        "firstMsg": "true",
        "mapPayload": "true",
        "disableComplete": false,
        "persistOnRestart": false,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "3fe6085cefbbf753"
            ],
            [
                "ce7b05095682a12c"
            ]
        ]
    },
    {
        "id": "3fe6085cefbbf753",
        "type": "function",
        "z": "53727ccd522e1e45",
        "name": "Normalize result",
        "func": "function EnsureGlobalVar(name, value) {\n    if (typeof (value === 'number') && !isNaN(value))\n        global.set(name, value);\n    return;\n}\n\nvar iMsg =\n    {\"payload\":{\n        \"timestamp\":null,\n        \"IMainL1\":0, \"IMainL2\":0, \"IMainL3\":0, \"IPvL1\":0, \"IPvL2\":0, \"IPvL3\":0,\n        \"IGrp1L1\":0,\"IGrp1L2\":0,\"IGrp1L3\":0,\"IGrp2L1\":0,\"IGrp2L2\":0,\"IGrp2L3\":0,\n        \"IGrp3L1\":0,\"IGrp3L2\":0,\"IGrp3L3\":0,\"IGrp4L1\":0,\"IGrp4L2\":0,\"IGrp4L3\":0,\n        \"IEvChL1\":0,\"IEvChL2\":0,\"IEvChL3\":0,\"IPEHL1\":0,\"IPEHL2\":0,\"IPEHL3\":0,\n        \"PwrMainL1\":0, \"PwrMainL2\":0, \"PwrMainL3\":0, \"PwrPvL1\":0, \"PwrPvL2\":0, \"PwrPvL3\":0,\n        \"PwrMainTotal\":0, \"PwrPvTotal\":0, \"TotalPwrImport\":0, \"TotalPwrExport\":0\n    }}\nvar Vref = 235;\nvar PdL1 = 0;\nvar PdL2 = 0;\nvar PdL3 = 0;\nvar PImp = 0;\nvar PExp = 0;\n\niMsg.payload.timestamp = msg.devices.dev1.timestamp;\n\n/*Device 1 - Group 1: sensor on house sockets consumption */\niMsg.payload.IGrp1L1 = msg.devices.dev1.G2L1;\niMsg.payload.IGrp1L2 = msg.devices.dev1.G2L2;\niMsg.payload.IGrp1L3 = msg.devices.dev1.G2L3;\n\n/*Device 1 - Group 2: sensor on House (first and second floor) consumption */\niMsg.payload.IGrp2L1 = msg.devices.dev1.G3L1;\niMsg.payload.IGrp2L2 = msg.devices.dev1.G3L2;\niMsg.payload.IGrp2L3 = msg.devices.dev1.G3L3;\n\n/*Device 1 - Group 3: sensor on kitchen stove consumption */\niMsg.payload.IGrp3L1 = msg.devices.dev1.G4L1;\niMsg.payload.IGrp3L2 = msg.devices.dev1.G4L2;\niMsg.payload.IGrp3L3 = msg.devices.dev1.G4L3;\n\n/*Device 2 - Group 1: sensor on EV Charger consumtion */\niMsg.payload.IEvChL1 = msg.devices.dev2.G1L1;\niMsg.payload.IEvChL2 = msg.devices.dev2.G1L2;\niMsg.payload.IEvChL3 = msg.devices.dev2.G1L3;\n\n/*Device 2 - Group 2: sensor on Puffer Electrical heating consumtion */\niMsg.payload.IPEHL1 = msg.devices.dev2.G2L1;\niMsg.payload.IPEHL2 = msg.devices.dev2.G2L2;\niMsg.payload.IPEHL3 = msg.devices.dev2.G2L3;\n\n/*Device 2 - Group 3: sensor on Solar IPv prosuction */\nif (msg.devices.dev2.G3L1>0.2) iMsg.payload.IPvL1 = msg.devices.dev2.G3L1;\n    else iMsg.payload.IPvL1 = 0;\nif (msg.devices.dev2.G3L2>0.2) iMsg.payload.IPvL2 = msg.devices.dev2.G3L2;\n    else iMsg.payload.IPvL2 = 0;\nif (msg.devices.dev2.G3L3>0.2) iMsg.payload.IPvL3 = msg.devices.dev2.G3L3;\n    else iMsg.payload.IPvL3 = 0;\n\n/*Device 2 - Group 4: sensor on basement lighting and sockets */\niMsg.payload.IGrp4L1 = msg.devices.dev2.G4L1;\niMsg.payload.IGrp4L2 = msg.devices.dev2.G4L2;\niMsg.payload.IGrp4L3 = msg.devices.dev2.G4L3;\n\n// aggregate main current \niMsg.payload.IMainL1 = msg.devices.dev1.G1L1 + iMsg.payload.IEvChL1 + iMsg.payload.IPEHL1 + iMsg.payload.IGrp4L1;\niMsg.payload.IMainL2 = msg.devices.dev1.G1L2 + iMsg.payload.IEvChL2 + iMsg.payload.IPEHL2 + iMsg.payload.IGrp4L2;\niMsg.payload.IMainL3 = msg.devices.dev1.G1L3 + iMsg.payload.IEvChL3 + iMsg.payload.IPEHL3 + iMsg.payload.IGrp4L3;\n\niMsg.payload.PwrMainL1 = Math.round(iMsg.payload.IMainL1 * Vref);\niMsg.payload.PwrMainL2 = Math.round(iMsg.payload.IMainL2 * Vref);\niMsg.payload.PwrMainL3 = Math.round(iMsg.payload.IMainL3 * Vref);\n\niMsg.payload.PwrPvL1 = Math.round(iMsg.payload.IPvL1 * Vref);\niMsg.payload.PwrPvL2 = Math.round(iMsg.payload.IPvL2 * Vref);\niMsg.payload.PwrPvL3 = Math.round(iMsg.payload.IPvL3 * Vref);\n\niMsg.payload.PwrMainTotal = iMsg.payload.PwrMainL1 + iMsg.payload.PwrMainL2 + iMsg.payload.PwrMainL3;\niMsg.payload.PwrPvTotal = iMsg.payload.PwrPvL1 + iMsg.payload.PwrPvL2 + iMsg.payload.PwrPvL3;\n\nPdL1 = iMsg.payload.PwrPvL1 - iMsg.payload.PwrMainL1;\nPdL2 = iMsg.payload.PwrPvL2 - iMsg.payload.PwrMainL2;\nPdL3 = iMsg.payload.PwrPvL3 - iMsg.payload.PwrMainL3;\n\nif (PdL1 >= 0) PExp = PExp + PdL1; else PImp = PImp - PdL1;\nif (PdL2 >= 0) PExp = PExp + PdL2; else PImp = PImp - PdL2;\nif (PdL3 >= 0) PExp = PExp + PdL3; else PImp = PImp - PdL3;\n\niMsg.payload.TotalPwrImport = PImp;\niMsg.payload.TotalPwrExport = PExp;\n\nEnsureGlobalVar(\"cSens_PwrPvL1\", iMsg.payload.PwrPvL1);\nEnsureGlobalVar(\"cSens_PwrPvL2\", iMsg.payload.PwrPvL2);\nEnsureGlobalVar(\"cSens_PwrPvL3\", iMsg.payload.PwrPvL3);\nEnsureGlobalVar(\"cSens_PwrMainL1\", iMsg.payload.PwrMainL1);\nEnsureGlobalVar(\"cSens_PwrMainL2\", iMsg.payload.PwrMainL2);\nEnsureGlobalVar(\"cSens_PwrMainL3\", iMsg.payload.PwrMainL3);\n\nreturn iMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 320,
        "wires": [
            [
                "c2811f87fb6e4b77",
                "d62d24bcd75c815a"
            ]
        ]
    },
    {
        "id": "d62d24bcd75c815a",
        "type": "influxdb out",
        "z": "53727ccd522e1e45",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Energy",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1210,
        "y": 320,
        "wires": []
    },
    {
        "id": "ccdf8f7c1ea07ddd",
        "type": "comment",
        "z": "53727ccd522e1e45",
        "name": "Deploy Power Sensor Tables  (existing will be droppped)",
        "info": "There will be one table for each device",
        "x": 1040,
        "y": 60,
        "wires": []
    },
    {
        "id": "ccf6e680e76a8b8c",
        "type": "influxdb in",
        "z": "53727ccd522e1e45",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT sum(\"mean\")/3600/1000 FROM (SELECT mean(\"TotalPwrExport\") FROM \"Energy\" \nWHERE time >= now() - 6h and time <= now() \nGROUP BY time(1m) fill(null));\n\nSELECT sum(\"mean\")/3600/1000 FROM (SELECT mean(\"TotalPwrImport\") FROM \"Energy\" \nWHERE time >= now() - 6h and time <= now() \nGROUP BY time(1m) fill(null));",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 450,
        "y": 600,
        "wires": [
            [
                "bf6a03764fb6d8ab"
            ]
        ]
    },
    {
        "id": "ff875bd6085f2318",
        "type": "inject",
        "z": "53727ccd522e1e45",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 600,
        "wires": [
            [
                "ccf6e680e76a8b8c"
            ]
        ]
    },
    {
        "id": "bf6a03764fb6d8ab",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "0e713af42b4a5405",
        "type": "inject",
        "z": "53727ccd522e1e45",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 660,
        "wires": [
            [
                "fb0ca99cb2d3829c"
            ]
        ]
    },
    {
        "id": "fb0ca99cb2d3829c",
        "type": "influxdb in",
        "z": "53727ccd522e1e45",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT\n    min(Diff1) as IDiffL1,\n    min(Diff2) as IDiffL2,\n    min(Diff3) as IDiffL3\n    FROM (\n        SELECT\n            IPvL1-IMainL1 as Diff1,\n            IPvL2-IMainL2 as Diff2,\n            IPvL3-IMainL3 as Diff3\n        FROM \"Energy\" WHERE time >= now() - 2m and time <= now()\n    );",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 450,
        "y": 660,
        "wires": [
            [
                "224cdf17578c318c",
                "e849a11dcac523ac"
            ]
        ]
    },
    {
        "id": "e849a11dcac523ac",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "1c60f21afc9c1209",
        "type": "comment",
        "z": "53727ccd522e1e45",
        "name": "Just some simple database queries",
        "info": "SELECT mean(\"PwrMainL3\") FROM \"Energy\" WHERE time >= now() - 6h and time <= now() GROUP BY time(1m) fill(null);",
        "x": 280,
        "y": 540,
        "wires": []
    },
    {
        "id": "224cdf17578c318c",
        "type": "function",
        "z": "53727ccd522e1e45",
        "name": "",
        "func": "var iMsg =\n    {\"payload\":{\n        \"PwrL1\":0, \"PwrL2\":0, \"PwrL3\":0\n    }}\nvar Vref = 235;\n\niMsg.payload.PwrL1 = Math.round(msg.payload[0].IDiffL1 * Vref);\niMsg.payload.PwrL2 = Math.round(msg.payload[0].IDiffL2 * Vref);\niMsg.payload.PwrL3 = Math.round(msg.payload[0].IDiffL3 * Vref);\n\nreturn iMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": [
            [
                "e849a11dcac523ac"
            ]
        ]
    },
    {
        "id": "f1e277bd7c2fca2d",
        "type": "mqtt in",
        "z": "53727ccd522e1e45",
        "name": "",
        "topic": "esp32-d12-D669D4",
        "qos": "2",
        "datatype": "auto",
        "broker": "6bf576b.0604988",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 460,
        "wires": [
            [
                "07e5b2ae1103b535"
            ]
        ]
    },
    {
        "id": "07e5b2ae1103b535",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 460,
        "wires": []
    },
    {
        "id": "8410373b9c2a9964",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "aee77072828f0791",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 400,
        "wires": []
    },
    {
        "id": "252ccaf3c85959eb",
        "type": "influxdb in",
        "z": "53727ccd522e1e45",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT sum(\"mean\")/3600/1000 FROM (SELECT mean(\"TotalPwrExport\") FROM \"Energy\" \nWHERE time >= now() - 6h and time <= now() \nGROUP BY time(1m) fill(null));\n\nSELECT sum(\"mean\")/3600/1000 FROM (SELECT mean(\"TotalPwrImport\") FROM \"Energy\" \nWHERE time >= now() - 6h and time <= now() \nGROUP BY time(1m) fill(null));",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 450,
        "y": 720,
        "wires": [
            [
                "7881c3cc25a45267"
            ]
        ]
    },
    {
        "id": "c841290cd57a0ba4",
        "type": "inject",
        "z": "53727ccd522e1e45",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 720,
        "wires": [
            [
                "252ccaf3c85959eb"
            ]
        ]
    },
    {
        "id": "7881c3cc25a45267",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 720,
        "wires": []
    },
    {
        "id": "8f63378217fe3540",
        "type": "influxdb in",
        "z": "53727ccd522e1e45",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT \n    max(\"IMainL1\") as \"L1 [A]\", \n    max(\"IMainL2\") as \"L2 [A]\", \n    max(\"IMainL3\") as \"L3 [A]\", \n    max(\"PwrMainL1\")/1000 as \"L1 [kW]\", \n    max(\"PwrMainL2\")/1000 as \"L2 [kW]\", \n    max(\"PwrMainL3\")/1000 as \"L3 [kW]\" \nFROM \"Energy\"",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 450,
        "y": 780,
        "wires": [
            [
                "a3e8e8fa86aa5820"
            ]
        ]
    },
    {
        "id": "a9a4fa36d8760728",
        "type": "inject",
        "z": "53727ccd522e1e45",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 230,
        "y": 780,
        "wires": [
            [
                "8f63378217fe3540"
            ]
        ]
    },
    {
        "id": "a3e8e8fa86aa5820",
        "type": "debug",
        "z": "53727ccd522e1e45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 780,
        "wires": []
    },
    {
        "id": "ac6a62b5.39975",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "24 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "24",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "2352d27e.94005e",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "12 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "12",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "5bf0d866.9868c",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "1 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "45bedb8.0b380a4",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Yesterday",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "yesterday",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 320,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "7adc3ee7.b03f6",
        "type": "ui_template",
        "z": "4c6509c5fd3e268a",
        "group": "bbc3532f.41ca7",
        "name": "Page Got Loaded",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: 6, topic: window.location.host}); // this gets sent when the view is opened in the browser\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "76a689da1e151343",
                "5bf0d866.9868c",
                "2352d27e.94005e",
                "ac6a62b5.39975",
                "556d9df.cb16f64",
                "45bedb8.0b380a4"
            ]
        ]
    },
    {
        "id": "14f5cd67.1fbd6b",
        "type": "ui_template",
        "z": "4c6509c5fd3e268a",
        "group": "bbc3532f.41ca7",
        "name": "Production vs. Consumption",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "\n<html>\n<iframe id=\"FramePid2\" width=\"620px\" height=\"300px\" style = \"overflow:hidden; margin:auto; border:0px solid green;\"></iframe>\n\n<script>\n//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('FramePid2');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1040,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "aeaaadf4.7dcb",
        "type": "function",
        "z": "4c6509c5fd3e268a",
        "name": "BuildTemplate",
        "func": "//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n\npanelid=2\n\nvar str = msg.topic;\nstr = str.replace(\"8000\", \"3000\");\nstr = str.replace(\"1880\", \"3000\");\n\nmsg.payload= \"http://\"+str+\"/d-solo/bg63uDRRz/main-energy?orgId=1\"+\n\"&refresh=30s\"+\n\"&theme=dark\"+\n\"&from=\"+ msg.fromdate +\n\"&to=\"+ msg.enddate +\n\"&panelId=\"+panelid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 160,
        "wires": [
            [
                "14f5cd67.1fbd6b"
            ]
        ]
    },
    {
        "id": "556d9df.cb16f64",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 7,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Today",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "today",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "76a689da1e151343",
        "type": "ui_button",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "group": "bbc3532f.41ca7",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": true,
        "label": "6 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "72bd5da5e3595c73"
            ]
        ]
    },
    {
        "id": "b3a94f6de7294b1b",
        "type": "comment",
        "z": "4c6509c5fd3e268a",
        "name": "On page loaded set the time ragne to last 6 hours",
        "info": "",
        "x": 240,
        "y": 60,
        "wires": []
    },
    {
        "id": "b2c3729bba308803",
        "type": "function",
        "z": "4c6509c5fd3e268a",
        "name": "BuildTemplate",
        "func": "//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n\npanelid=10\n\nvar str = msg.topic;\nstr = str.replace(\"8000\", \"3000\");\nstr = str.replace(\"1880\", \"3000\");\n\nmsg.payload= \"http://\"+str+\"/d-solo/bg63uDRRz/main-energy?orgId=1\"+\n\"&refresh=30s\"+\n\"&theme=dark\"+\n\"&from=\"+ msg.fromdate +\n\"&to=\"+ msg.enddate +\n\"&panelId=\"+panelid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 200,
        "wires": [
            [
                "fd62dcdc4b781539"
            ]
        ]
    },
    {
        "id": "fd62dcdc4b781539",
        "type": "ui_template",
        "z": "4c6509c5fd3e268a",
        "group": "bbc3532f.41ca7",
        "name": "Main Consumers",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "\n<html>\n<iframe id=\"FramePid10\" width=\"620px\" height=\"300px\" style = \"overflow:hidden; margin:auto; border:0px solid green;\"></iframe>\n\n<script>\n//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('FramePid10');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "380df11394d5c421",
        "type": "function",
        "z": "4c6509c5fd3e268a",
        "name": "BuildTemplate",
        "func": "//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n\npanelid=12\n\nvar str = msg.topic;\nstr = str.replace(\"8000\", \"3000\");\nstr = str.replace(\"1880\", \"3000\");\n\nmsg.payload= \"http://\"+str+\"/d-solo/bg63uDRRz/main-energy?orgId=1\"+\n\"&refresh=30s\"+\n\"&theme=dark\"+\n\"&from=\"+ msg.fromdate +\n\"&to=\"+ msg.enddate +\n\"&panelId=\"+panelid\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 240,
        "wires": [
            [
                "d44cbf49d139fd94"
            ]
        ]
    },
    {
        "id": "d44cbf49d139fd94",
        "type": "ui_template",
        "z": "4c6509c5fd3e268a",
        "group": "bbc3532f.41ca7",
        "name": "Import vs Export",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "\n<html>\n<iframe id=\"FramePid12\" width=\"620px\" height=\"300px\" style = \"overflow:hidden; margin:auto; border:0px solid green;\"></iframe>\n\n<script>\n//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('FramePid12');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ad7eee1615af220a",
        "type": "comment",
        "z": "4c6509c5fd3e268a",
        "name": "Graphs to be shown on embedded frame",
        "info": "",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "72bd5da5e3595c73",
        "type": "function",
        "z": "4c6509c5fd3e268a",
        "name": "Merge",
        "func": "var p_1h = 1000 * 60 * 60;\nvar p_6h  =  6 * p_1h;\nvar p_12h = 12 * p_1h;\nvar p_24h = 24 * p_1h;\n\nvar d = new Date();\nvar current = d.getTime();\nvar today0h = d.setHours(0,0,0,0);\nmsg.enddate = current;\n\n\nswitch (msg.payload)\n{\n    case 1:\n        msg.fromdate = current - p_1h;\n        break;\n\n    case 6:\n        msg.fromdate = current - p_6h;\n        break;\n\n    case 12:\n        msg.fromdate = current - p_12h;\n        break;\n\n    case 24:\n        msg.fromdate = current - p_24h;\n        break;\n\n    case \"today\":\n        msg.fromdate = today0h;\n        break;\n\n    case \"yesterday\":\n        msg.fromdate = today0h - p_24h;\n        msg.enddate = today0h;\n        break;\n\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [
            [
                "aeaaadf4.7dcb",
                "b2c3729bba308803",
                "380df11394d5c421",
                "5ef0f5a81e8a5bef"
            ]
        ]
    },
    {
        "id": "5ef0f5a81e8a5bef",
        "type": "debug",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 280,
        "wires": []
    },
    {
        "id": "04110d6d592017f4",
        "type": "openweathermap",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Rasnov",
        "country": "Brasov",
        "language": "ro",
        "x": 360,
        "y": 400,
        "wires": [
            [
                "e82a9d80748fa052"
            ]
        ]
    },
    {
        "id": "c2d7d8c902096ff2",
        "type": "inject",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "04110d6d592017f4"
            ]
        ]
    },
    {
        "id": "e82a9d80748fa052",
        "type": "debug",
        "z": "4c6509c5fd3e268a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "87758b0dd405d2dc",
        "type": "http in",
        "z": "21a9ed82f7161b37",
        "name": "powerdata",
        "url": "/powerdata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "baed4435b8bfa099",
                "6bdbb189ca5bb0ed"
            ]
        ]
    },
    {
        "id": "d335c391676d7467",
        "type": "http response",
        "z": "21a9ed82f7161b37",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 820,
        "y": 120,
        "wires": []
    },
    {
        "id": "f50b7ae390ec0d45",
        "type": "csv",
        "z": "21a9ed82f7161b37",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "Time, G1L1, G1L2, G1L3, G2L1, G2L2, G2L3, G3L1, G3L2, G3L3",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "d335c391676d7467",
                "baed4435b8bfa099"
            ]
        ]
    },
    {
        "id": "baed4435b8bfa099",
        "type": "debug",
        "z": "21a9ed82f7161b37",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "9b270fb2a3ae5243",
        "type": "comment",
        "z": "21a9ed82f7161b37",
        "name": "Get CSV data from sqlite dattabase",
        "info": "There will be one table for each device",
        "x": 260,
        "y": 80,
        "wires": []
    },
    {
        "id": "6869f3ef4e78cdc3",
        "type": "ui_template",
        "z": "21a9ed82f7161b37",
        "group": "bbc3532f.41ca7",
        "name": "Power Data 1",
        "order": 10,
        "width": "0",
        "height": "0",
        "format": "<script src=\"https://code.highcharts.com/themes/dark-unica.js\"></script>\n  <script src=\"https://code.highcharts.com/highcharts.js\"></script>\n  <script src=\"https://code.highcharts.com/modules/data.js\"></script>\n  <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n  <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\n\n  <style>\n.highcharts-figure, .highcharts-data-table table {\n    min-width: 360px; \n    max-width: 800px;\n    margin: 1em auto;\n}\n.highcharts-data-table table {\n\tfont-family: Verdana, sans-serif;\n\tborder-collapse: collapse;\n\tborder: 1px solid #EBEBEB;\n\tmargin: 10px auto;\n\ttext-align: center;\n\twidth: 100%;\n\tmax-width: 500px;\n}\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n.highcharts-data-table th {\n\tfont-weight: 600;\n    padding: 0.5em;\n}\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\n    padding: 0.5em;\n}\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n\n.highcharts-series path {\n     stroke-linecap: initial; \n}\n\n.ld-label {\n\twidth:200px;\n\tdisplay: inline-block;\n}\n\n.ld-url-input {\n\twidth: 500px; \n}\n\n.ld-time-input {\n\twidth: 40px;\n}\n  </style>\n\n\n<figure class=\"highcharts-figure\">\n    <div id=\"container\"></div>\n    <p class=\"highcharts-description\">\n\t\tDatasets formatted in CSV or JSON can be fetched remotely using the\n\t\t<code>data</code> module. This chart shows how a chart can also be\n\t\tconfigured to poll against the remote source.\n    </p>\n</figure>\n\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tEnable Polling\n\t</label>\n\t<input type=\"checkbox\" checked=\"checked\" id=\"enablePolling\"/>\n</div>\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tPolling Time (Seconds)\n\t</label>\n\t<input class=\"ld-time-input\" type=\"number\" value=\"30\" id=\"pollingTime\"/>\n</div>\n<div class=\"ld-row\">\n\t<label class=\"ld-label\">\n\t\tCSV URL\n\t</label>\n\t<input class=\"ld-url-input\" type=\"text\" id=\"fetchURL\"/>\n</div>\n\n<script>\nvar defaultData = 'http://192.168.2.25:1880/powerdata';\nvar urlInput = document.getElementById('fetchURL');\nvar pollingCheckbox = document.getElementById('enablePolling');\nvar pollingInput = document.getElementById('pollingTime');\n\nfunction createChart() {\n\tHighcharts.setOptions({\n\t\ttime: {\n\t\t\ttimezoneOffset: 180\n\t\t}\n\t});\n\t\n   Highcharts.chart('container', {\n        chart: {\n            type: 'spline'\n        },\n        title: {\n            text: 'Live Data'\n        },\n        accessibility: {\n            announceNewData: {\n                enabled: true,\n                minAnnounceInterval: 15000,\n                announcementFormatter: function (allSeries, newSeries, newPoint) {\n                    if (newPoint) {\n                        return 'New point added. Value: ' + newPoint.y;\n                    }\n                    return false;\n                }\n            }\n        },\n        data: {\n            csvURL: urlInput.value,\n            enablePolling: pollingCheckbox.checked === true,\n            dataRefreshRate: parseInt(pollingInput.value, 10)\n        }\n    });\n\n    if (pollingInput.value < 1 || !pollingInput.value) {\n        pollingInput.value = 1;\n    }\n}\n\nurlInput.value = defaultData;\n\n// We recreate instead of using chart update to make sure the loaded CSV\n// and such is completely gone.\npollingCheckbox.onchange = urlInput.onchange = pollingInput.onchange = createChart;\n\n// Create the chart\ncreateChart();\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 380,
        "wires": [
            [
                "d7cba47de1ede877"
            ]
        ]
    },
    {
        "id": "69eb5f1d2264b962",
        "type": "inject",
        "z": "21a9ed82f7161b37",
        "name": "On Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "1f772740e8ff7dd1"
            ]
        ]
    },
    {
        "id": "d7cba47de1ede877",
        "type": "debug",
        "z": "21a9ed82f7161b37",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 380,
        "wires": []
    },
    {
        "id": "1f772740e8ff7dd1",
        "type": "sqlite",
        "z": "21a9ed82f7161b37",
        "mydb": "e5571c1e.f9dd8",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM (\n    SELECT Time, G1L1, G1L2, G1L3, G2L1, G2L2, G2L3, G3L1, G3L2, G3L3 \n    FROM power_device_1 \n    ORDER BY Time DESC LIMIT 120)\nORDER BY Time ASC;",
        "name": "HomeControl.db",
        "x": 420,
        "y": 380,
        "wires": [
            [
                "1321f0e0ec6303bb",
                "b2c0099262cc16de"
            ]
        ]
    },
    {
        "id": "1321f0e0ec6303bb",
        "type": "csv",
        "z": "21a9ed82f7161b37",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "Time, G1L1, G1L2, G1L3, G2L1, G2L2, G2L3, G3L1, G3L2, G3L3",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "6869f3ef4e78cdc3",
                "abc6ba6b8a98581d"
            ]
        ]
    },
    {
        "id": "b2c0099262cc16de",
        "type": "debug",
        "z": "21a9ed82f7161b37",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "abc6ba6b8a98581d",
        "type": "debug",
        "z": "21a9ed82f7161b37",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "7d554461e1e4c5b7",
        "type": "ui_template",
        "z": "21a9ed82f7161b37",
        "group": "bbc3532f.41ca7",
        "name": "Power Data 3",
        "order": 12,
        "width": "0",
        "height": "0",
        "format": "<script src=\"https://code.highcharts.com/themes/dark-unica.js\"></script>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/data.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\n<script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\n\n<figure class=\"highcharts-figure1\">\n    <div id=\"container\" style=\"height: 360px\"></div>\n</figure>\n\n<style>\n.highcharts-figure1, .highcharts-data-table table {\n    max-height: 360px; \n    width: 600px;\n    margin: 1px auto;\n}\n\n.highcharts-data-table table {\n\tfont-family: Verdana, sans-serif;\n\tborder-collapse: collapse;\n\tborder: 1px solid #EBEBEB;\n\tmargin: 10px auto;\n\ttext-align: center;\n\twidth: 100%;\n\tmax-width: 600px;\n}\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n.highcharts-data-table th {\n\tfont-weight: 600;\n    padding: 0.5em;\n}\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\n    padding: 0.5em;\n}\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n\n\n</style>\n\n\n\n<script>\n\nfunction createChart() {\n    Highcharts.chart('container', {\n        chart: {\n            type: 'spline',\n            zoomType: 'x'\n        },\n        title: {\n            text: 'Live Data'\n        },\n        accessibility: {\n            announceNewData: {\n                enabled: true,\n                minAnnounceInterval: 15000,\n                announcementFormatter: function (allSeries, newSeries, newPoint) {\n                    if (newPoint) {\n                        return 'New point added. Value: ' + newPoint.y;\n                    }\n                    return false;\n                }\n            }\n        },\n        data: {\n            csvURL: 'https://demo-live-data.highcharts.com/time-data.csv',\n            enablePolling: true,\n            dataRefreshRate: 2\n        },\n         plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 0,\n                            y2: 1\n                        },\n                        stops: [\n                            [0, Highcharts.getOptions().colors[0]],\n                            [1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                        ]\n                    },\n                    marker: {\n                        radius: 2\n                    },\n                    lineWidth: 1,\n                    states: {\n                        hover: {\n                            lineWidth: 1\n                        }\n                    },\n                    threshold: null\n                }\n            }\n    });\n}\n\n\ncreateChart();\n</script>\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "9ca3194c5f35706b",
        "type": "ui_template",
        "z": "21a9ed82f7161b37",
        "group": "bbc3532f.41ca7",
        "name": "Power Data 2",
        "order": 11,
        "width": "0",
        "height": "0",
        "format": "<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/data.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\n<script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\n\n<figure class=\"highcharts-figure test\" >\n    <div id=\"container1\"></div>\n    <p class=\"highcharts-description\">\n        Highcharts has extensive support for time series, and will adapt\n        intelligently to the input data. Click and drag in the chart to zoom in\n        and inspect the data.\n    </p>\n</figure>\n\n<script>\n Highcharts.getJSON(\n    'https://cdn.jsdelivr.net/gh/highcharts/highcharts@v7.0.0/samples/data/usdeur.json',\n    function (data) {\n\n        Highcharts.chart('container1', {\n            chart: {\n                type: 'spline',\n                zoomType: 'x'\n            },\n            title: {\n                text: 'USD to EUR exchange rate over time'\n            },\n            subtitle: {\n                text: document.ontouchstart === undefined ?\n                    'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\n            },\n            xAxis: {\n                type: 'datetime'\n            },\n            yAxis: {\n                title: {\n                    text: 'Exchange rate'\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 0,\n                            y2: 1\n                        },\n                        stops: [\n                            [0, Highcharts.getOptions().colors[0]],\n                            [1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\n                        ]\n                    },\n                    marker: {\n                        radius: 2\n                    },\n                    lineWidth: 1,\n                    states: {\n                        hover: {\n                            lineWidth: 1\n                        }\n                    },\n                    threshold: null\n                }\n            },\n\n            series: [{\n                type: 'area',\n                name: 'USD to EUR',\n                data: data\n            }]\n        });\n    }\n);\n</script>\n\n<style>\n\n.highcharts-figure, .highcharts-data-table table {\n    min-width: 360px; \n    max-width: 600px;\n    margin: 2px auto;\n}\n\n.highcharts-data-table table {\n\tfont-family: Verdana, sans-serif;\n\tborder-collapse: collapse;\n\tborder: 1px solid #EBEBEB;\n\tmargin: 10px auto;\n\ttext-align: center;\n\twidth: 100%;\n\tmax-width: 500px;\n}\n.highcharts-data-table caption {\n    padding: 1em 0;\n    font-size: 1.2em;\n    color: #555;\n}\n.highcharts-data-table th {\n\tfont-weight: 600;\n    padding: 0.5em;\n}\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\n    padding: 0.5em;\n}\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\n    background: #f8f8f8;\n}\n.highcharts-data-table tr:hover {\n    background: #f1f7ff;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "166b2836cfb88a35",
        "type": "influxdb in",
        "z": "21a9ed82f7161b37",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "query": "SELECT time, PwrMainTotal, PwrPvTotal FROM Energy",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "0d65abcea457c3a1"
            ]
        ]
    },
    {
        "id": "0d65abcea457c3a1",
        "type": "http response",
        "z": "21a9ed82f7161b37",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "3d794e1e401ac33d",
        "type": "http in",
        "z": "21a9ed82f7161b37",
        "name": "jspowerdata",
        "url": "/jspowerdata",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "166b2836cfb88a35"
            ]
        ]
    },
    {
        "id": "6bdbb189ca5bb0ed",
        "type": "sqlite",
        "z": "21a9ed82f7161b37",
        "mydb": "e5571c1e.f9dd8",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM (\n    SELECT Time, G1L1, G1L2, G1L3, G2L1, G2L2, G2L3, G3L1, G3L2, G3L3 \n    FROM power_device_1 \n    ORDER BY Time DESC LIMIT 120)\nORDER BY Time ASC;",
        "name": "HomeControl.db",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "f50b7ae390ec0d45",
                "baed4435b8bfa099"
            ]
        ]
    },
    {
        "id": "7453ad82.0e1bb4",
        "type": "mqtt in",
        "z": "7ee931b.b980fd",
        "name": "PiZeroW1/WeatherSensors",
        "topic": "PiZeroW1/WeatherSensors",
        "qos": "2",
        "broker": "6bf576b.0604988",
        "inputs": 0,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "fcbe99ff.d5c508"
            ]
        ]
    },
    {
        "id": "17a88bf1.2f6f34",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "17327430.7b0f6c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "wLuminosity",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} lux",
        "layout": "row-spread",
        "x": 1026,
        "y": 63,
        "wires": []
    },
    {
        "id": "75a18ca.3ac4674",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "17327430.7b0f6c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "wTemperature",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} °C",
        "layout": "row-spread",
        "x": 1035,
        "y": 103,
        "wires": []
    },
    {
        "id": "5d5a8c9b.f2d524",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "17327430.7b0f6c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "wPresure",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} Hg",
        "layout": "row-spread",
        "x": 1015,
        "y": 143,
        "wires": []
    },
    {
        "id": "df2be10a.7784b",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "17327430.7b0f6c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "wHumidity",
        "label": "{{msg.tag}}",
        "format": "{{msg.payload | number:2}} %",
        "layout": "row-spread",
        "x": 1026,
        "y": 186,
        "wires": []
    },
    {
        "id": "dc7c38bc.3dac08",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "Format Data",
        "func": "var obj = msg.payload;\n\nvar msg1 = {payload: 0};\nvar msg2 = {payload: 0};\nvar msg3 = {payload: 0};\nvar msg4 = {payload: 0};\n\nswitch (obj.name) \n{\n    case \"TSL2561 @ 0x39\":\n        msg1.tag = \"Luminosity\";\n        msg1.payload = obj.lux;\n        global.set(\"wea_lux\", obj.value);\n        node.send([ msg1]);\n        break;\n                \n    case \"BME280 @ 0x76\":\n        msg2.tag = \"Temperature\";\n        msg2.payload = obj.Tc;\n        global.set(\"wea_temp\", obj.Tc);\n\n        msg3.tag = \"Presure\";\n        msg3.payload = obj.P;\n        global.set(\"wea_pres\", obj.P);\n\n        msg4.tag = \"Relative Humidity\";\n        msg4.payload = obj.RH;\n        global.set(\"wea_rhum\", obj.RH);\n                \n        node.send([null, msg2, msg3, msg4]);\n        break;\n}\n\n\n\nreturn;\n",
        "outputs": "4",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 791,
        "y": 119,
        "wires": [
            [
                "17a88bf1.2f6f34"
            ],
            [
                "75a18ca.3ac4674"
            ],
            [
                "5d5a8c9b.f2d524"
            ],
            [
                "df2be10a.7784b"
            ]
        ],
        "outputLabels": [
            "Temp1",
            "",
            "",
            ""
        ]
    },
    {
        "id": "fcbe99ff.d5c508",
        "type": "json",
        "z": "7ee931b.b980fd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 421,
        "y": 119,
        "wires": [
            [
                "7d86b0bb.0a7c9"
            ]
        ]
    },
    {
        "id": "7d86b0bb.0a7c9",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "Ensure Object",
        "func": "if (msg.payload === Object(msg.payload))\n    return msg;\nelse\n    return;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 602,
        "y": 119,
        "wires": [
            [
                "dc7c38bc.3dac08"
            ]
        ]
    },
    {
        "id": "d100687b.b940d8",
        "type": "debug",
        "z": "7ee931b.b980fd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "d8e0af1b.d6f5e",
        "type": "aedes broker",
        "z": "7ee931b.b980fd",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "8080",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "d100687b.b940d8"
            ],
            []
        ]
    },
    {
        "id": "a71c9d6f80da0c09",
        "type": "comment",
        "z": "7ee931b.b980fd",
        "name": "API Key: d855b98d01e0f0469dc8049fb1a6f8f2",
        "info": "",
        "x": 280,
        "y": 360,
        "wires": []
    },
    {
        "id": "e39e780af012e79a",
        "type": "ui_button",
        "z": "7ee931b.b980fd",
        "name": "IconRefresh",
        "group": "70fb931.dfc146c",
        "order": 1,
        "width": 2,
        "height": 2,
        "passthru": false,
        "label": "",
        "tooltip": "Refresh",
        "color": "",
        "bgcolor": "",
        "icon": "fa-refresh fa-4x",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "05bfe0b8094ac05f"
            ]
        ]
    },
    {
        "id": "209c90dc31108933",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "order": 5,
        "width": "6",
        "height": 1,
        "name": "Description",
        "label": "",
        "format": "{{msg.payload.current.weather[0].description}}",
        "layout": "row-left",
        "className": "",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "d6027da73ebc229f",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "order": 3,
        "width": "4",
        "height": 1,
        "name": "Wind",
        "label": "",
        "format": "{{msg.payload.current.wind_speed}}&nbsp;&nbsp;<i class=\"wi wi-darksky-wind\"></i>&nbsp;&nbsp;{{msg.payload.current.wind_cardinal}}",
        "layout": "col-center",
        "className": "",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "5cf8db5e4dcebe2f",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "SunriseTime",
        "label": "",
        "format": "<i class=\"wi wi-owm-01d\"></i>&nbsp;<i class=\"fa fa-arrow-up\"></i>&nbsp;&nbsp;{{msg.payload.current.sunrise}}",
        "layout": "row-center",
        "x": 1090,
        "y": 440,
        "wires": []
    },
    {
        "id": "bd10600d651a6e7c",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "SunsetTime",
        "label": "",
        "format": "<i class=\"wi wi-wu-sunny\"></i>&nbsp;<i class=\"fa fa-arrow-down\"></i>&nbsp;&nbsp;{{msg.payload.current.sunset}}",
        "layout": "row-center",
        "x": 1090,
        "y": 480,
        "wires": []
    },
    {
        "id": "a98e83317afd3268",
        "type": "comment",
        "z": "7ee931b.b980fd",
        "name": "OpenWeatherMap One Call API for Weather and Forecast",
        "info": "",
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "2bf0b898e95d9f99",
        "type": "ui_template",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "name": "Forecast2",
        "order": 7,
        "width": "12",
        "height": 2,
        "format": "<div style=\"height: 100%; justify-content: center; align-items: center;\">\n <div layout=\"rowicons\" layout-align=\"space-around start\" ng-repeat=\"data in msg.payload.rowicons\" style=\"font-size:150%;padding-top: 5px;padding-bottom: 5px\">\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell01}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell02}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell03}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell04}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell05}}\"></i></span>\n  <span flex style=\"color: white;text-align: center\"><i class=\"wi wi-owm-{{data.cell06}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell07}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell08}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell09}}\"></i></span>\n  <span flex style=\"color: #097479;text-align: center\"><i class=\"wi wi-owm-{{data.cell10}}\"></i></span>\n </div>\n <div layout=\"rowtext\" layout-align=\"space-around start\" ng-repeat=\"data in msg.payload.rowtext\" style=\"line-height: 150%\">\n  <span flex style=\"color: white;text-align: center;\">{{data.cell01}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell02}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell03}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell04}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell05}}</span>\n  <span flex style=\"color: white;text-align: center\">{{data.cell06}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell07}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell08}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell09}}</span>\n  <span flex style=\"color: #097479;text-align: center\">{{data.cell10}}</span>\n </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1080,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "0e95a0c2f9c4f53d",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "Format forecast data",
        "func": "var fcdata = {};\nvar units = 'metric'; //flow.get('units');\nif (units===undefined)\n{\n  units=\"imperial\";\n}\n\nfunction formatTemp(high, low){\n    if (units == \"imperial\") {\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°F'\n        }\n    }\n    else { // metric\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°C'\n        }\n    }\n    return temp;\n}\n\nfunction dayName(unixTime){\n  var dateObject = new Date(unixTime * 1000);\n  return dateObject.toLocaleString(flow.get('lang'), { timezone: msg.payload.timezone, weekday: 'short'});\n  // If the line above is not producing the correct short weekday names for the language set by 'lang',\n  //   you can try upgrading to NodeJS version 13 or higher (when full international support was added for the toLocaleString function),\n  //   or you can use the code below which is an example for French short weekday names.\n/*  \n  switch (dateObject.toLocaleString('en', { timezone: msg.payload.timezone, weekday: 'short'})) {\n    case 'Mon':\n      return 'Lun';\n    case 'Tue':\n      return 'Mar';\n    case 'Wed':\n      return 'Mer';\n    case 'Thu':\n      return 'Jeu';\n    case 'Fri':\n      return 'Ven';\n    case 'Sat':\n      return 'Sam';\n    case 'Sun':\n      return 'Dim';\n  }\n*/\n}\n\nfunction timeConvert(UNIX_timestamp){\n  var dateObject = new Date(UNIX_timestamp * 1000);\n  if (flow.get('hour12')) {  // 12 hour time format\n    return dateObject.toLocaleString('en', { timezone: msg.payload.timezone, hour12: true, hour: 'numeric'}).toLowerCase();\n  } else {  // 24 hour time format\n    return dateObject.toLocaleString('en', { timezone: msg.payload.timezone, hour12: false, hour: 'numeric'}) + ':00';\n  }      \n}\n\n// prepare forecast data for CSS based ui widget\nfcdata.payload = {\n  rowtext: {\n  \tdata01: {\n      cell01: timeConvert(msg.payload.hourly[1].dt),\n      cell02: timeConvert(msg.payload.hourly[2].dt),\n      cell03: timeConvert(msg.payload.hourly[3].dt),\n      cell04: timeConvert(msg.payload.hourly[4].dt),\n      cell05: timeConvert(msg.payload.hourly[5].dt),\n      cell06: timeConvert(msg.payload.hourly[6].dt),\n      cell07: dayName(msg.payload.daily[1].dt),\n      cell08: dayName(msg.payload.daily[2].dt),\n      cell09: dayName(msg.payload.daily[3].dt),\n      cell10: dayName(msg.payload.daily[4].dt),\n  \t},\n  \tdata02: {\n       cell01: formatTemp(msg.payload.hourly[1].temp),\n       cell02: formatTemp(msg.payload.hourly[2].temp),\n       cell03: formatTemp(msg.payload.hourly[3].temp),\n       cell04: formatTemp(msg.payload.hourly[4].temp),\n       cell05: formatTemp(msg.payload.hourly[5].temp),\n       cell06: formatTemp(msg.payload.hourly[6].temp),\n       cell07: formatTemp(msg.payload.daily[1].temp.max, msg.payload.daily[0].temp.min),\n       cell08: formatTemp(msg.payload.daily[2].temp.max, msg.payload.daily[1].temp.min),\n       cell09: formatTemp(msg.payload.daily[3].temp.max, msg.payload.daily[2].temp.min),\n       cell10: formatTemp(msg.payload.daily[4].temp.max, msg.payload.daily[3].temp.min),\n  \t}\n  },\n  rowicons: {\n  \tdata01: {\n  \t\tcell01: msg.payload.hourly[1].weather[0].icon,\n  \t\tcell02: msg.payload.hourly[2].weather[0].icon,\n  \t\tcell03: msg.payload.hourly[3].weather[0].icon,\n  \t\tcell04: msg.payload.hourly[4].weather[0].icon,\n  \t\tcell05: msg.payload.hourly[5].weather[0].icon,\n  \t\tcell06: msg.payload.hourly[6].weather[0].icon,\n  \t\tcell07: msg.payload.daily[1].weather[0].icon,\n  \t\tcell08: msg.payload.daily[2].weather[0].icon,\n  \t\tcell09: msg.payload.daily[3].weather[0].icon,\n  \t\tcell10: msg.payload.daily[4].weather[0].icon,\n  \t}\n  }\n}\n\nreturn fcdata;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 580,
        "wires": [
            [
                "2bf0b898e95d9f99"
            ]
        ]
    },
    {
        "id": "7f5772e9938da79a",
        "type": "ui_text",
        "z": "7ee931b.b980fd",
        "group": "70fb931.dfc146c",
        "order": 2,
        "width": 2,
        "height": 1,
        "name": "Temperature",
        "label": "",
        "format": "<p style=\"font-size: 200%\">{{msg.payload.current.temp}}</p>",
        "layout": "row-left",
        "x": 1090,
        "y": 360,
        "wires": []
    },
    {
        "id": "556d528f6dcc5304",
        "type": "inject",
        "z": "7ee931b.b980fd",
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 220,
        "y": 460,
        "wires": [
            [
                "482f24abe986f6ff"
            ]
        ]
    },
    {
        "id": "d0f3883590409da7",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "Format current data",
        "func": "var icon = {};\n\nvar units = 'metric'; //flow.get('units');\nif (units === undefined) {units = 'imperial';}\n\nfunction timeConvert(UNIX_timestamp){\n  var dateObject = new Date(UNIX_timestamp * 1000);\n  if (flow.get('hour12')) {  // 12 hour time format\n    return dateObject.toLocaleString('en', { timezone: msg.payload.timezone, hour12: true, hour: 'numeric', minute: '2-digit'}).toLowerCase();\n  } else {  // 24 hour time format\n    return dateObject.toLocaleString('en', { timezone: msg.payload.timezone, hour12: false, hour: 'numeric', minute: '2-digit'});\n  }      \n}\n\nvar degreesToCardinal = function(deg){\n  if (deg>11.25 && deg<=33.75){return \"NNE\";}\n  else if (deg>33.75 && deg<56.25){return \"NE\";}\n  else if (deg>56.25 && deg<78.75){return \"ENE\";}\n  else if (deg>78.75 && deg<101.25){return \"E\";}\n  else if (deg>101.25 && deg<123.75){return \"ESE\";}\n  else if (deg>123.75 && deg<146.25){return \"SE\";}\n  else if (deg>146.25 && deg<168.75){return \"SSE\";}\n  else if (deg>168.75 && deg<191.25){return \"S\";}\n  else if (deg>191.25 && deg<213.75){return \"SSW\";}\n  else if (deg>213.75 && deg<236.25){return \"SW\";}\n  else if (deg>236.25 && deg<258.75){return \"WSW\";}\n  else if (deg>258.75 && deg<281.25){return \"W\";}\n  else if (deg>281.25 && deg<303.75){return \"WNW\";}\n  else if (deg>303.75 && deg<326.25){return \"NW\";}\n  else if (deg>326.25 && deg<348.75){return \"NNW\";}\n  else {return \"N\";}\n}\n\nif (units == \"imperial\")\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed() + ' °F';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed() + ' mph';\n}\nelse  // metric units\n{\n  msg.payload.current.temp = msg.payload.current.temp.toFixed(1) + ' °C';\n  msg.payload.current.wind_speed = msg.payload.current.wind_speed.toFixed(1) + ' m/s';\n}\n\nmsg.payload.current.wind_cardinal = degreesToCardinal(msg.payload.current.wind_deg);\n\nmsg.payload.current.sunrise = timeConvert(msg.payload.current.sunrise);\nmsg.payload.current.sunset = timeConvert(msg.payload.current.sunset);\n\nvar iconString = 'wi-owm-' + msg.payload.current.weather[0].icon + ' wi-4x';\nicon = {\n    ui_control: {\n        icon: iconString\n    }\n}; \n\nreturn [msg, icon];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 460,
        "wires": [
            [
                "7f5772e9938da79a",
                "d6027da73ebc229f",
                "209c90dc31108933",
                "5cf8db5e4dcebe2f",
                "bd10600d651a6e7c"
            ],
            [
                "e39e780af012e79a"
            ]
        ]
    },
    {
        "id": "482f24abe986f6ff",
        "type": "change",
        "z": "7ee931b.b980fd",
        "name": "Settings",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "40.30",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "-111.69",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.appid",
                "pt": "msg",
                "to": "<appID>",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.units",
                "pt": "msg",
                "to": "imperial",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.lang",
                "pt": "msg",
                "to": "en",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hour12",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "units",
                "pt": "flow",
                "to": "payload.units",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lang",
                "pt": "flow",
                "to": "payload.lang",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exclude",
                "pt": "msg",
                "to": "minutely",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "b7a703cbf33c1138"
            ]
        ]
    },
    {
        "id": "64ad456b2bcd54bb",
        "type": "ui_ui_control",
        "z": "7ee931b.b980fd",
        "name": "Update tab",
        "events": "all",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "e49a6aa5ba6afda8"
            ]
        ]
    },
    {
        "id": "05bfe0b8094ac05f",
        "type": "link out",
        "z": "7ee931b.b980fd",
        "name": "Refresh",
        "links": [
            "faf06a71ef1a4dd7"
        ],
        "x": 1215,
        "y": 520,
        "wires": []
    },
    {
        "id": "faf06a71ef1a4dd7",
        "type": "link in",
        "z": "7ee931b.b980fd",
        "name": "",
        "links": [
            "05bfe0b8094ac05f"
        ],
        "x": 255,
        "y": 520,
        "wires": [
            [
                "482f24abe986f6ff"
            ]
        ]
    },
    {
        "id": "e49a6aa5ba6afda8",
        "type": "switch",
        "z": "7ee931b.b980fd",
        "name": "tab focus",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "482f24abe986f6ff"
            ]
        ]
    },
    {
        "id": "580632d171da2c35",
        "type": "openweathermap",
        "z": "7ee931b.b980fd",
        "name": "Current Weather",
        "wtype": "current",
        "lon": "25.467087",
        "lat": "45.600885",
        "city": "",
        "country": "",
        "language": "ro",
        "x": 420,
        "y": 800,
        "wires": [
            [
                "134a56e6015fc8a6"
            ]
        ]
    },
    {
        "id": "e2293f23caf0f4e8",
        "type": "inject",
        "z": "7ee931b.b980fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 800,
        "wires": [
            [
                "580632d171da2c35"
            ]
        ]
    },
    {
        "id": "134a56e6015fc8a6",
        "type": "debug",
        "z": "7ee931b.b980fd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 800,
        "wires": []
    },
    {
        "id": "6616c013b34cc851",
        "type": "comment",
        "z": "7ee931b.b980fd",
        "name": "45.600885, 25.467087",
        "info": "",
        "x": 470,
        "y": 700,
        "wires": []
    },
    {
        "id": "b7a703cbf33c1138",
        "type": "openweathermap",
        "z": "7ee931b.b980fd",
        "name": "Current Weather",
        "wtype": "onecall",
        "lon": "25.467087",
        "lat": "45.600885",
        "city": "",
        "country": "",
        "language": "ro",
        "x": 620,
        "y": 460,
        "wires": [
            [
                "3e7ab30b52df4118",
                "d0f3883590409da7",
                "0e95a0c2f9c4f53d"
            ]
        ]
    },
    {
        "id": "3e7ab30b52df4118",
        "type": "debug",
        "z": "7ee931b.b980fd",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "dfcb6793c6796271",
        "type": "openweathermap",
        "z": "7ee931b.b980fd",
        "name": "5 day Forecast",
        "wtype": "forecast",
        "lon": "25.467087",
        "lat": "45.600885",
        "city": "",
        "country": "",
        "language": "ro",
        "x": 420,
        "y": 860,
        "wires": [
            [
                "055a17b9e3f4eb87",
                "7fda97298dd3af0b"
            ]
        ]
    },
    {
        "id": "a04dcf2dd8d0e77f",
        "type": "openweathermap",
        "z": "7ee931b.b980fd",
        "name": "Combined",
        "wtype": "onecall",
        "lon": "25.467087",
        "lat": "45.600885",
        "city": "",
        "country": "",
        "language": "ro",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "9340174079e4d851",
                "9aa9973ecdf359d6"
            ]
        ]
    },
    {
        "id": "7fda97298dd3af0b",
        "type": "debug",
        "z": "7ee931b.b980fd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "9340174079e4d851",
        "type": "debug",
        "z": "7ee931b.b980fd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 920,
        "wires": []
    },
    {
        "id": "9ba7c4d319203d51",
        "type": "inject",
        "z": "7ee931b.b980fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 860,
        "wires": [
            [
                "dfcb6793c6796271"
            ]
        ]
    },
    {
        "id": "90e16a807ff352b5",
        "type": "inject",
        "z": "7ee931b.b980fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 920,
        "wires": [
            [
                "a04dcf2dd8d0e77f"
            ]
        ]
    },
    {
        "id": "055a17b9e3f4eb87",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "",
        "func": "function timeConvert(UNIX_timestamp){\n  var dateObject = new Date(UNIX_timestamp * 1000);\n  return dateObject.toLocaleString('en', { timezone: \"Europe/Bucharest\", hour12: false, hour: 'numeric', minute: '2-digit'});\n    \n}\n\n\nfunction data(id) {\n    let date = msg.payload[id].dt_txt;\n    let icon = msg.payload[id].weather[0].icon;\n    let main = msg.payload[id].weather[0].main;\n    let desc = msg.payload[id].weather[0].description;\n\n    let s =`date:${date}, icon: ${icon}, main: ${main}, desc: ${desc}`;\n    return s \n}\n\nnode.warn(data(0));\nnode.warn(data(1));\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "7fda97298dd3af0b"
            ]
        ]
    },
    {
        "id": "9aa9973ecdf359d6",
        "type": "function",
        "z": "7ee931b.b980fd",
        "name": "",
        "func": "function timeConvert(UNIX_timestamp){\n  var dateObject = new Date(UNIX_timestamp * 1000);\n  return dateObject.toLocaleString('ro', { timezone: \"Europe/Bucharest\"});\n    \n}\n\nfunction data(id) {\n    let date = msg.payload[id].dt_txt;\n    let icon = msg.payload[id].weather[0].icon;\n    let main = msg.payload[id].weather[0].main;\n    let desc = msg.payload[id].weather[0].description;\n\n    let s =`date:${date}, icon: ${icon}, main: ${main}, desc: ${desc}`;\n    return s \n}\n\n    let date = timeConvert(msg.payload.current.dt);\n    let icon = msg.payload.current.weather[0].icon;\n    let main = msg.payload.current.weather[0].main;\n    let desc = msg.payload.current.weather[0].description;\n\n    let s =`date:${date}, icon: ${icon}, main: ${main}, desc: ${desc}`;\n\nnode.warn(s);\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 900,
        "wires": [
            [
                "9340174079e4d851"
            ]
        ]
    },
    {
        "id": "133ca42576879fcd",
        "type": "ui_button",
        "z": "7346bde9601d82e2",
        "name": "",
        "group": "2a8bf519.1f58ea",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start NAS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "04207902e0505f4e"
            ]
        ]
    },
    {
        "id": "04207902e0505f4e",
        "type": "wake on lan",
        "z": "7346bde9601d82e2",
        "mac": "4C:CC:6A:AC:43:F8",
        "host": "255.255.255.255",
        "udpport": 9,
        "numpackets": 3,
        "interval": 100,
        "name": "",
        "x": 580,
        "y": 100,
        "wires": []
    }
]